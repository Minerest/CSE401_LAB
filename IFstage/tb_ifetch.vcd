$date
	Tue Jan 12 22:14:01 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ifetch $end
$var wire 32 ! IF_ID_npc [31:0] $end
$var wire 32 " IF_ID_instr [31:0] $end
$var reg 32 # EX_MEM_NPC [31:0] $end
$var reg 1 $ EX_MEM_PCSrc $end
$scope module uut $end
$var wire 32 % EX_MEM_NPC [31:0] $end
$var wire 1 $ EX_MEM_PCSrc $end
$var wire 32 & npc_mux [31:0] $end
$var wire 32 ' npc [31:0] $end
$var wire 32 ( dataout [31:0] $end
$var wire 32 ) PC [31:0] $end
$var wire 32 * IF_ID_npc [31:0] $end
$var wire 32 + IF_ID_instr [31:0] $end
$scope module if_id1 $end
$var wire 32 , npc [31:0] $end
$var wire 32 - instr [31:0] $end
$var reg 32 . instrout [31:0] $end
$var reg 32 / npcout [31:0] $end
$upscope $end
$scope module incrementer1 $end
$var wire 32 0 pcout [31:0] $end
$var wire 32 1 pcin [31:0] $end
$upscope $end
$scope module memory1 $end
$var wire 32 2 addr [31:0] $end
$var reg 32 3 data [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 4 a [31:0] $end
$var wire 32 5 b [31:0] $end
$var wire 1 $ sel $end
$var wire 32 6 y [31:0] $end
$upscope $end
$scope module pc_mod1 $end
$var wire 32 7 npc [31:0] $end
$var reg 32 8 PC [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
b1 7
b1 6
b1 5
b0 4
b10100000000000000000000010101010 3
b0 2
b0 1
b1 0
b0 /
b0 .
b10100000000000000000000010101010 -
b1 ,
b0 +
b0 *
b0 )
b10100000000000000000000010101010 (
b1 '
b1 &
b0 %
0$
b0 #
b0 "
b0 !
$end
#1000
b10000000000000000000000010001 (
b10000000000000000000000010001 -
b10000000000000000000000010001 3
b10 &
b10 6
b10 7
b10 '
b10 ,
b10 0
b10 5
b1 )
b1 1
b1 2
b1 8
b1 !
b1 *
b1 /
b10100000000000000000000010101010 "
b10100000000000000000000010101010 +
b10100000000000000000000010101010 .
#2000
b100000000000000000000000100010 (
b100000000000000000000000100010 -
b100000000000000000000000100010 3
b11 &
b11 6
b11 7
b11 '
b11 ,
b11 0
b11 5
b10 )
b10 1
b10 2
b10 8
b10 !
b10 *
b10 /
b10000000000000000000000010001 "
b10000000000000000000000010001 +
b10000000000000000000000010001 .
#3000
b110000000000000000000000110011 (
b110000000000000000000000110011 -
b110000000000000000000000110011 3
b100 &
b100 6
b100 7
b100 '
b100 ,
b100 0
b100 5
b11 )
b11 1
b11 2
b11 8
b11 !
b11 *
b11 /
b100000000000000000000000100010 "
b100000000000000000000000100010 +
b100000000000000000000000100010 .
#4000
b1000000000000000000000001000100 (
b1000000000000000000000001000100 -
b1000000000000000000000001000100 3
b101 &
b101 6
b101 7
b101 '
b101 ,
b101 0
b101 5
b100 )
b100 1
b100 2
b100 8
b100 !
b100 *
b100 /
b110000000000000000000000110011 "
b110000000000000000000000110011 +
b110000000000000000000000110011 .
#5000
b1010000000000000000000001010101 (
b1010000000000000000000001010101 -
b1010000000000000000000001010101 3
b110 &
b110 6
b110 7
b110 '
b110 ,
b110 0
b110 5
b101 )
b101 1
b101 2
b101 8
b101 !
b101 *
b101 /
b1000000000000000000000001000100 "
b1000000000000000000000001000100 +
b1000000000000000000000001000100 .
#6000
b1100000000000000000000001100110 (
b1100000000000000000000001100110 -
b1100000000000000000000001100110 3
b111 &
b111 6
b111 7
b111 '
b111 ,
b111 0
b111 5
b110 )
b110 1
b110 2
b110 8
b110 !
b110 *
b110 /
b1010000000000000000000001010101 "
b1010000000000000000000001010101 +
b1010000000000000000000001010101 .
#7000
b1110000000000000000000001110111 (
b1110000000000000000000001110111 -
b1110000000000000000000001110111 3
b1000 &
b1000 6
b1000 7
b1000 '
b1000 ,
b1000 0
b1000 5
b111 )
b111 1
b111 2
b111 8
b111 !
b111 *
b111 /
b1100000000000000000000001100110 "
b1100000000000000000000001100110 +
b1100000000000000000000001100110 .
#8000
b10000000000000000000000010001000 (
b10000000000000000000000010001000 -
b10000000000000000000000010001000 3
b1001 &
b1001 6
b1001 7
b1001 '
b1001 ,
b1001 0
b1001 5
b1000 )
b1000 1
b1000 2
b1000 8
b1000 !
b1000 *
b1000 /
b1110000000000000000000001110111 "
b1110000000000000000000001110111 +
b1110000000000000000000001110111 .
#9000
b10010000000000000000000010011001 (
b10010000000000000000000010011001 -
b10010000000000000000000010011001 3
b1010 &
b1010 6
b1010 7
b1010 '
b1010 ,
b1010 0
b1010 5
b1001 )
b1001 1
b1001 2
b1001 8
b1001 !
b1001 *
b1001 /
b10000000000000000000000010001000 "
b10000000000000000000000010001000 +
b10000000000000000000000010001000 .
#10000
bx (
bx -
bx 3
b1011 &
b1011 6
b1011 7
b1011 '
b1011 ,
b1011 0
b1011 5
b1010 )
b1010 1
b1010 2
b1010 8
b1010 !
b1010 *
b1010 /
b10010000000000000000000010011001 "
b10010000000000000000000010011001 +
b10010000000000000000000010011001 .
#11000
b1100 &
b1100 6
b1100 7
b1100 '
b1100 ,
b1100 0
b1100 5
b1011 )
b1011 1
b1011 2
b1011 8
b1011 !
b1011 *
b1011 /
bx "
bx +
bx .
#12000
b1101 &
b1101 6
b1101 7
b1101 '
b1101 ,
b1101 0
b1101 5
b1100 )
b1100 1
b1100 2
b1100 8
b1100 !
b1100 *
b1100 /
#13000
b1110 &
b1110 6
b1110 7
b1110 '
b1110 ,
b1110 0
b1110 5
b1101 )
b1101 1
b1101 2
b1101 8
b1101 !
b1101 *
b1101 /
#14000
b1111 &
b1111 6
b1111 7
b1111 '
b1111 ,
b1111 0
b1111 5
b1110 )
b1110 1
b1110 2
b1110 8
b1110 !
b1110 *
b1110 /
#15000
b10000 &
b10000 6
b10000 7
b10000 '
b10000 ,
b10000 0
b10000 5
b1111 )
b1111 1
b1111 2
b1111 8
b1111 !
b1111 *
b1111 /
#16000
b10001 &
b10001 6
b10001 7
b10001 '
b10001 ,
b10001 0
b10001 5
b10000 )
b10000 1
b10000 2
b10000 8
b10000 !
b10000 *
b10000 /
#17000
b10010 &
b10010 6
b10010 7
b10010 '
b10010 ,
b10010 0
b10010 5
b10001 )
b10001 1
b10001 2
b10001 8
b10001 !
b10001 *
b10001 /
#18000
b10011 &
b10011 6
b10011 7
b10011 '
b10011 ,
b10011 0
b10011 5
b10010 )
b10010 1
b10010 2
b10010 8
b10010 !
b10010 *
b10010 /
#19000
b10100 &
b10100 6
b10100 7
b10100 '
b10100 ,
b10100 0
b10100 5
b10011 )
b10011 1
b10011 2
b10011 8
b10011 !
b10011 *
b10011 /
#20000
b10101 &
b10101 6
b10101 7
b10101 '
b10101 ,
b10101 0
b10101 5
b10100 )
b10100 1
b10100 2
b10100 8
b10100 !
b10100 *
b10100 /
