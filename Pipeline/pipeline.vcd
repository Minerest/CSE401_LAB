$date
   Wed Jan 20 14:47:17 2021
$end
$version
  P.20131013
$end
$timescale
  1ps
$end
$scope module pipeline $end
$var wire 1 m- IF_ID_instr [31] $end
$var wire 1 n- IF_ID_instr [30] $end
$var wire 1 o- IF_ID_instr [29] $end
$var wire 1 p- IF_ID_instr [28] $end
$var wire 1 q- IF_ID_instr [27] $end
$var wire 1 r- IF_ID_instr [26] $end
$var wire 1 v- IF_ID_instr [25] $end
$var wire 1 w- IF_ID_instr [24] $end
$var wire 1 x- IF_ID_instr [23] $end
$var wire 1 y- IF_ID_instr [22] $end
$var wire 1 z- IF_ID_instr [21] $end
$var wire 1 *0 IF_ID_instr [20] $end
$var wire 1 +0 IF_ID_instr [19] $end
$var wire 1 ,0 IF_ID_instr [18] $end
$var wire 1 -0 IF_ID_instr [17] $end
$var wire 1 .0 IF_ID_instr [16] $end
$var wire 1 /0 IF_ID_instr [15] $end
$var wire 1 00 IF_ID_instr [14] $end
$var wire 1 10 IF_ID_instr [13] $end
$var wire 1 20 IF_ID_instr [12] $end
$var wire 1 30 IF_ID_instr [11] $end
$var wire 1 Q. IF_ID_instr [10] $end
$var wire 1 R. IF_ID_instr [9] $end
$var wire 1 S. IF_ID_instr [8] $end
$var wire 1 T. IF_ID_instr [7] $end
$var wire 1 U. IF_ID_instr [6] $end
$var wire 1 V. IF_ID_instr [5] $end
$var wire 1 W. IF_ID_instr [4] $end
$var wire 1 X. IF_ID_instr [3] $end
$var wire 1 Y. IF_ID_instr [2] $end
$var wire 1 Z. IF_ID_instr [1] $end
$var wire 1 [. IF_ID_instr [0] $end
$var wire 1 f. IF_ID_npc [31] $end
$var wire 1 g. IF_ID_npc [30] $end
$var wire 1 h. IF_ID_npc [29] $end
$var wire 1 i. IF_ID_npc [28] $end
$var wire 1 j. IF_ID_npc [27] $end
$var wire 1 k. IF_ID_npc [26] $end
$var wire 1 l. IF_ID_npc [25] $end
$var wire 1 m. IF_ID_npc [24] $end
$var wire 1 n. IF_ID_npc [23] $end
$var wire 1 o. IF_ID_npc [22] $end
$var wire 1 p. IF_ID_npc [21] $end
$var wire 1 q. IF_ID_npc [20] $end
$var wire 1 r. IF_ID_npc [19] $end
$var wire 1 s. IF_ID_npc [18] $end
$var wire 1 t. IF_ID_npc [17] $end
$var wire 1 u. IF_ID_npc [16] $end
$var wire 1 v. IF_ID_npc [15] $end
$var wire 1 w. IF_ID_npc [14] $end
$var wire 1 x. IF_ID_npc [13] $end
$var wire 1 y. IF_ID_npc [12] $end
$var wire 1 z. IF_ID_npc [11] $end
$var wire 1 {. IF_ID_npc [10] $end
$var wire 1 |. IF_ID_npc [9] $end
$var wire 1 }. IF_ID_npc [8] $end
$var wire 1 ~. IF_ID_npc [7] $end
$var wire 1 !/ IF_ID_npc [6] $end
$var wire 1 "/ IF_ID_npc [5] $end
$var wire 1 #/ IF_ID_npc [4] $end
$var wire 1 $/ IF_ID_npc [3] $end
$var wire 1 %/ IF_ID_npc [2] $end
$var wire 1 &/ IF_ID_npc [1] $end
$var wire 1 '/ IF_ID_npc [0] $end
$var wire 1 z9 MEM_WB_rd [4] $end
$var wire 1 {9 MEM_WB_rd [3] $end
$var wire 1 |9 MEM_WB_rd [2] $end
$var wire 1 }9 MEM_WB_rd [1] $end
$var wire 1 ~9 MEM_WB_rd [0] $end
$var wire 1 89 MEM_WB_regwrite $end
$var wire 1 z< WB_mux5_writedata [31] $end
$var wire 1 {< WB_mux5_writedata [30] $end
$var wire 1 |< WB_mux5_writedata [29] $end
$var wire 1 }< WB_mux5_writedata [28] $end
$var wire 1 ~< WB_mux5_writedata [27] $end
$var wire 1 != WB_mux5_writedata [26] $end
$var wire 1 "= WB_mux5_writedata [25] $end
$var wire 1 #= WB_mux5_writedata [24] $end
$var wire 1 $= WB_mux5_writedata [23] $end
$var wire 1 %= WB_mux5_writedata [22] $end
$var wire 1 &= WB_mux5_writedata [21] $end
$var wire 1 '= WB_mux5_writedata [20] $end
$var wire 1 (= WB_mux5_writedata [19] $end
$var wire 1 )= WB_mux5_writedata [18] $end
$var wire 1 *= WB_mux5_writedata [17] $end
$var wire 1 += WB_mux5_writedata [16] $end
$var wire 1 ,= WB_mux5_writedata [15] $end
$var wire 1 -= WB_mux5_writedata [14] $end
$var wire 1 .= WB_mux5_writedata [13] $end
$var wire 1 /= WB_mux5_writedata [12] $end
$var wire 1 0= WB_mux5_writedata [11] $end
$var wire 1 1= WB_mux5_writedata [10] $end
$var wire 1 2= WB_mux5_writedata [9] $end
$var wire 1 3= WB_mux5_writedata [8] $end
$var wire 1 4= WB_mux5_writedata [7] $end
$var wire 1 5= WB_mux5_writedata [6] $end
$var wire 1 6= WB_mux5_writedata [5] $end
$var wire 1 7= WB_mux5_writedata [4] $end
$var wire 1 8= WB_mux5_writedata [3] $end
$var wire 1 9= WB_mux5_writedata [2] $end
$var wire 1 := WB_mux5_writedata [1] $end
$var wire 1 ;= WB_mux5_writedata [0] $end
$var wire 1 47 wb_ctlout [1] $end
$var wire 1 57 wb_ctlout [0] $end
$var wire 1 67 m_ctlout [2] $end
$var wire 1 77 m_ctlout [1] $end
$var wire 1 87 m_ctlout [0] $end
$var wire 1 37 regdst $end
$var wire 1 #7 alusrc $end
$var wire 1 |5 aluop [1] $end
$var wire 1 }5 aluop [0] $end
$var wire 1 .4 npcout [31] $end
$var wire 1 /4 npcout [30] $end
$var wire 1 04 npcout [29] $end
$var wire 1 14 npcout [28] $end
$var wire 1 24 npcout [27] $end
$var wire 1 34 npcout [26] $end
$var wire 1 44 npcout [25] $end
$var wire 1 54 npcout [24] $end
$var wire 1 64 npcout [23] $end
$var wire 1 74 npcout [22] $end
$var wire 1 84 npcout [21] $end
$var wire 1 94 npcout [20] $end
$var wire 1 :4 npcout [19] $end
$var wire 1 ;4 npcout [18] $end
$var wire 1 <4 npcout [17] $end
$var wire 1 =4 npcout [16] $end
$var wire 1 >4 npcout [15] $end
$var wire 1 ?4 npcout [14] $end
$var wire 1 @4 npcout [13] $end
$var wire 1 A4 npcout [12] $end
$var wire 1 B4 npcout [11] $end
$var wire 1 C4 npcout [10] $end
$var wire 1 D4 npcout [9] $end
$var wire 1 E4 npcout [8] $end
$var wire 1 F4 npcout [7] $end
$var wire 1 G4 npcout [6] $end
$var wire 1 H4 npcout [5] $end
$var wire 1 I4 npcout [4] $end
$var wire 1 J4 npcout [3] $end
$var wire 1 K4 npcout [2] $end
$var wire 1 L4 npcout [1] $end
$var wire 1 M4 npcout [0] $end
$var wire 1 05 rdata1out [31] $end
$var wire 1 15 rdata1out [30] $end
$var wire 1 25 rdata1out [29] $end
$var wire 1 35 rdata1out [28] $end
$var wire 1 45 rdata1out [27] $end
$var wire 1 55 rdata1out [26] $end
$var wire 1 65 rdata1out [25] $end
$var wire 1 75 rdata1out [24] $end
$var wire 1 85 rdata1out [23] $end
$var wire 1 95 rdata1out [22] $end
$var wire 1 :5 rdata1out [21] $end
$var wire 1 ;5 rdata1out [20] $end
$var wire 1 <5 rdata1out [19] $end
$var wire 1 =5 rdata1out [18] $end
$var wire 1 >5 rdata1out [17] $end
$var wire 1 ?5 rdata1out [16] $end
$var wire 1 @5 rdata1out [15] $end
$var wire 1 A5 rdata1out [14] $end
$var wire 1 B5 rdata1out [13] $end
$var wire 1 C5 rdata1out [12] $end
$var wire 1 D5 rdata1out [11] $end
$var wire 1 E5 rdata1out [10] $end
$var wire 1 F5 rdata1out [9] $end
$var wire 1 G5 rdata1out [8] $end
$var wire 1 H5 rdata1out [7] $end
$var wire 1 I5 rdata1out [6] $end
$var wire 1 J5 rdata1out [5] $end
$var wire 1 K5 rdata1out [4] $end
$var wire 1 L5 rdata1out [3] $end
$var wire 1 M5 rdata1out [2] $end
$var wire 1 N5 rdata1out [1] $end
$var wire 1 O5 rdata1out [0] $end
$var wire 1 z7 rdata2out [31] $end
$var wire 1 {7 rdata2out [30] $end
$var wire 1 |7 rdata2out [29] $end
$var wire 1 }7 rdata2out [28] $end
$var wire 1 ~7 rdata2out [27] $end
$var wire 1 !8 rdata2out [26] $end
$var wire 1 "8 rdata2out [25] $end
$var wire 1 #8 rdata2out [24] $end
$var wire 1 $8 rdata2out [23] $end
$var wire 1 %8 rdata2out [22] $end
$var wire 1 &8 rdata2out [21] $end
$var wire 1 '8 rdata2out [20] $end
$var wire 1 (8 rdata2out [19] $end
$var wire 1 )8 rdata2out [18] $end
$var wire 1 *8 rdata2out [17] $end
$var wire 1 +8 rdata2out [16] $end
$var wire 1 ,8 rdata2out [15] $end
$var wire 1 -8 rdata2out [14] $end
$var wire 1 .8 rdata2out [13] $end
$var wire 1 /8 rdata2out [12] $end
$var wire 1 08 rdata2out [11] $end
$var wire 1 18 rdata2out [10] $end
$var wire 1 28 rdata2out [9] $end
$var wire 1 38 rdata2out [8] $end
$var wire 1 48 rdata2out [7] $end
$var wire 1 58 rdata2out [6] $end
$var wire 1 68 rdata2out [5] $end
$var wire 1 78 rdata2out [4] $end
$var wire 1 88 rdata2out [3] $end
$var wire 1 98 rdata2out [2] $end
$var wire 1 :8 rdata2out [1] $end
$var wire 1 ;8 rdata2out [0] $end
$var wire 1 A6 s_extendout [31] $end
$var wire 1 B6 s_extendout [30] $end
$var wire 1 C6 s_extendout [29] $end
$var wire 1 D6 s_extendout [28] $end
$var wire 1 E6 s_extendout [27] $end
$var wire 1 F6 s_extendout [26] $end
$var wire 1 G6 s_extendout [25] $end
$var wire 1 H6 s_extendout [24] $end
$var wire 1 I6 s_extendout [23] $end
$var wire 1 J6 s_extendout [22] $end
$var wire 1 K6 s_extendout [21] $end
$var wire 1 L6 s_extendout [20] $end
$var wire 1 M6 s_extendout [19] $end
$var wire 1 N6 s_extendout [18] $end
$var wire 1 O6 s_extendout [17] $end
$var wire 1 P6 s_extendout [16] $end
$var wire 1 Q6 s_extendout [15] $end
$var wire 1 R6 s_extendout [14] $end
$var wire 1 S6 s_extendout [13] $end
$var wire 1 T6 s_extendout [12] $end
$var wire 1 U6 s_extendout [11] $end
$var wire 1 V6 s_extendout [10] $end
$var wire 1 W6 s_extendout [9] $end
$var wire 1 X6 s_extendout [8] $end
$var wire 1 Y6 s_extendout [7] $end
$var wire 1 Z6 s_extendout [6] $end
$var wire 1 [6 s_extendout [5] $end
$var wire 1 \6 s_extendout [4] $end
$var wire 1 ]6 s_extendout [3] $end
$var wire 1 ^6 s_extendout [2] $end
$var wire 1 _6 s_extendout [1] $end
$var wire 1 `6 s_extendout [0] $end
$var wire 1 .7 instrout_2016 [4] $end
$var wire 1 /7 instrout_2016 [3] $end
$var wire 1 07 instrout_2016 [2] $end
$var wire 1 17 instrout_2016 [1] $end
$var wire 1 27 instrout_2016 [0] $end
$var wire 1 )7 instrout_1511 [4] $end
$var wire 1 *7 instrout_1511 [3] $end
$var wire 1 +7 instrout_1511 [2] $end
$var wire 1 ,7 instrout_1511 [1] $end
$var wire 1 -7 instrout_1511 [0] $end
$var wire 1 +; wb_ctlout_pipe [1] $end
$var wire 1 ,; wb_ctlout_pipe [0] $end
$var wire 1 A: branch $end
$var wire 1 '; memread $end
$var wire 1 &; memwrite $end
$var wire 1 B: zero $end
$var wire 1 M; alu_result [31] $end
$var wire 1 N; alu_result [30] $end
$var wire 1 O; alu_result [29] $end
$var wire 1 P; alu_result [28] $end
$var wire 1 Q; alu_result [27] $end
$var wire 1 R; alu_result [26] $end
$var wire 1 S; alu_result [25] $end
$var wire 1 T; alu_result [24] $end
$var wire 1 U; alu_result [23] $end
$var wire 1 V; alu_result [22] $end
$var wire 1 W; alu_result [21] $end
$var wire 1 X; alu_result [20] $end
$var wire 1 Y; alu_result [19] $end
$var wire 1 Z; alu_result [18] $end
$var wire 1 [; alu_result [17] $end
$var wire 1 \; alu_result [16] $end
$var wire 1 ]; alu_result [15] $end
$var wire 1 ^; alu_result [14] $end
$var wire 1 _; alu_result [13] $end
$var wire 1 `; alu_result [12] $end
$var wire 1 a; alu_result [11] $end
$var wire 1 b; alu_result [10] $end
$var wire 1 c; alu_result [9] $end
$var wire 1 d; alu_result [8] $end
$var wire 1 e; alu_result [7] $end
$var wire 1 f; alu_result [6] $end
$var wire 1 g; alu_result [5] $end
$var wire 1 h; alu_result [4] $end
$var wire 1 i; alu_result [3] $end
$var wire 1 j; alu_result [2] $end
$var wire 1 k; alu_result [1] $end
$var wire 1 l; alu_result [0] $end
$var wire 1 d: rdata2out_pipe [31] $end
$var wire 1 e: rdata2out_pipe [30] $end
$var wire 1 f: rdata2out_pipe [29] $end
$var wire 1 g: rdata2out_pipe [28] $end
$var wire 1 h: rdata2out_pipe [27] $end
$var wire 1 i: rdata2out_pipe [26] $end
$var wire 1 j: rdata2out_pipe [25] $end
$var wire 1 k: rdata2out_pipe [24] $end
$var wire 1 l: rdata2out_pipe [23] $end
$var wire 1 m: rdata2out_pipe [22] $end
$var wire 1 n: rdata2out_pipe [21] $end
$var wire 1 o: rdata2out_pipe [20] $end
$var wire 1 p: rdata2out_pipe [19] $end
$var wire 1 q: rdata2out_pipe [18] $end
$var wire 1 r: rdata2out_pipe [17] $end
$var wire 1 s: rdata2out_pipe [16] $end
$var wire 1 t: rdata2out_pipe [15] $end
$var wire 1 u: rdata2out_pipe [14] $end
$var wire 1 v: rdata2out_pipe [13] $end
$var wire 1 w: rdata2out_pipe [12] $end
$var wire 1 x: rdata2out_pipe [11] $end
$var wire 1 y: rdata2out_pipe [10] $end
$var wire 1 z: rdata2out_pipe [9] $end
$var wire 1 {: rdata2out_pipe [8] $end
$var wire 1 |: rdata2out_pipe [7] $end
$var wire 1 }: rdata2out_pipe [6] $end
$var wire 1 ~: rdata2out_pipe [5] $end
$var wire 1 !; rdata2out_pipe [4] $end
$var wire 1 "; rdata2out_pipe [3] $end
$var wire 1 #; rdata2out_pipe [2] $end
$var wire 1 $; rdata2out_pipe [1] $end
$var wire 1 %; rdata2out_pipe [0] $end
$var wire 1 \2 add_result [31] $end
$var wire 1 ]2 add_result [30] $end
$var wire 1 ^2 add_result [29] $end
$var wire 1 _2 add_result [28] $end
$var wire 1 `2 add_result [27] $end
$var wire 1 a2 add_result [26] $end
$var wire 1 b2 add_result [25] $end
$var wire 1 c2 add_result [24] $end
$var wire 1 d2 add_result [23] $end
$var wire 1 e2 add_result [22] $end
$var wire 1 f2 add_result [21] $end
$var wire 1 g2 add_result [20] $end
$var wire 1 h2 add_result [19] $end
$var wire 1 i2 add_result [18] $end
$var wire 1 j2 add_result [17] $end
$var wire 1 k2 add_result [16] $end
$var wire 1 l2 add_result [15] $end
$var wire 1 m2 add_result [14] $end
$var wire 1 n2 add_result [13] $end
$var wire 1 o2 add_result [12] $end
$var wire 1 p2 add_result [11] $end
$var wire 1 q2 add_result [10] $end
$var wire 1 r2 add_result [9] $end
$var wire 1 s2 add_result [8] $end
$var wire 1 t2 add_result [7] $end
$var wire 1 u2 add_result [6] $end
$var wire 1 v2 add_result [5] $end
$var wire 1 w2 add_result [4] $end
$var wire 1 x2 add_result [3] $end
$var wire 1 y2 add_result [2] $end
$var wire 1 z2 add_result [1] $end
$var wire 1 {2 add_result [0] $end
$var wire 1 m; five_bit_muxout [4] $end
$var wire 1 n; five_bit_muxout [3] $end
$var wire 1 o; five_bit_muxout [2] $end
$var wire 1 p; five_bit_muxout [1] $end
$var wire 1 q; five_bit_muxout [0] $end
$var wire 1 |= MEM_WB_memtoreg $end
$var wire 1 <= read_data [31] $end
$var wire 1 == read_data [30] $end
$var wire 1 >= read_data [29] $end
$var wire 1 ?= read_data [28] $end
$var wire 1 @= read_data [27] $end
$var wire 1 A= read_data [26] $end
$var wire 1 B= read_data [25] $end
$var wire 1 C= read_data [24] $end
$var wire 1 D= read_data [23] $end
$var wire 1 E= read_data [22] $end
$var wire 1 F= read_data [21] $end
$var wire 1 G= read_data [20] $end
$var wire 1 H= read_data [19] $end
$var wire 1 I= read_data [18] $end
$var wire 1 J= read_data [17] $end
$var wire 1 K= read_data [16] $end
$var wire 1 L= read_data [15] $end
$var wire 1 M= read_data [14] $end
$var wire 1 N= read_data [13] $end
$var wire 1 O= read_data [12] $end
$var wire 1 P= read_data [11] $end
$var wire 1 Q= read_data [10] $end
$var wire 1 R= read_data [9] $end
$var wire 1 S= read_data [8] $end
$var wire 1 T= read_data [7] $end
$var wire 1 U= read_data [6] $end
$var wire 1 V= read_data [5] $end
$var wire 1 W= read_data [4] $end
$var wire 1 X= read_data [3] $end
$var wire 1 Y= read_data [2] $end
$var wire 1 Z= read_data [1] $end
$var wire 1 [= read_data [0] $end
$var wire 1 \= mem_alu_result [31] $end
$var wire 1 ]= mem_alu_result [30] $end
$var wire 1 ^= mem_alu_result [29] $end
$var wire 1 _= mem_alu_result [28] $end
$var wire 1 `= mem_alu_result [27] $end
$var wire 1 a= mem_alu_result [26] $end
$var wire 1 b= mem_alu_result [25] $end
$var wire 1 c= mem_alu_result [24] $end
$var wire 1 d= mem_alu_result [23] $end
$var wire 1 e= mem_alu_result [22] $end
$var wire 1 f= mem_alu_result [21] $end
$var wire 1 g= mem_alu_result [20] $end
$var wire 1 h= mem_alu_result [19] $end
$var wire 1 i= mem_alu_result [18] $end
$var wire 1 j= mem_alu_result [17] $end
$var wire 1 k= mem_alu_result [16] $end
$var wire 1 l= mem_alu_result [15] $end
$var wire 1 m= mem_alu_result [14] $end
$var wire 1 n= mem_alu_result [13] $end
$var wire 1 o= mem_alu_result [12] $end
$var wire 1 p= mem_alu_result [11] $end
$var wire 1 q= mem_alu_result [10] $end
$var wire 1 r= mem_alu_result [9] $end
$var wire 1 s= mem_alu_result [8] $end
$var wire 1 t= mem_alu_result [7] $end
$var wire 1 u= mem_alu_result [6] $end
$var wire 1 v= mem_alu_result [5] $end
$var wire 1 w= mem_alu_result [4] $end
$var wire 1 x= mem_alu_result [3] $end
$var wire 1 y= mem_alu_result [2] $end
$var wire 1 z= mem_alu_result [1] $end
$var wire 1 {= mem_alu_result [0] $end
$var wire 1 C: MEM_PCSrc $end
$var reg 1 O$ EX_MEM_PCSrc $end
$var reg 32 P$ EX_MEM_NPC [31:0] $end
$scope module ifetch1 $end
$var wire 1 m- IF_ID_instr [31] $end
$var wire 1 n- IF_ID_instr [30] $end
$var wire 1 o- IF_ID_instr [29] $end
$var wire 1 p- IF_ID_instr [28] $end
$var wire 1 q- IF_ID_instr [27] $end
$var wire 1 r- IF_ID_instr [26] $end
$var wire 1 v- IF_ID_instr [25] $end
$var wire 1 w- IF_ID_instr [24] $end
$var wire 1 x- IF_ID_instr [23] $end
$var wire 1 y- IF_ID_instr [22] $end
$var wire 1 z- IF_ID_instr [21] $end
$var wire 1 *0 IF_ID_instr [20] $end
$var wire 1 +0 IF_ID_instr [19] $end
$var wire 1 ,0 IF_ID_instr [18] $end
$var wire 1 -0 IF_ID_instr [17] $end
$var wire 1 .0 IF_ID_instr [16] $end
$var wire 1 /0 IF_ID_instr [15] $end
$var wire 1 00 IF_ID_instr [14] $end
$var wire 1 10 IF_ID_instr [13] $end
$var wire 1 20 IF_ID_instr [12] $end
$var wire 1 30 IF_ID_instr [11] $end
$var wire 1 Q. IF_ID_instr [10] $end
$var wire 1 R. IF_ID_instr [9] $end
$var wire 1 S. IF_ID_instr [8] $end
$var wire 1 T. IF_ID_instr [7] $end
$var wire 1 U. IF_ID_instr [6] $end
$var wire 1 V. IF_ID_instr [5] $end
$var wire 1 W. IF_ID_instr [4] $end
$var wire 1 X. IF_ID_instr [3] $end
$var wire 1 Y. IF_ID_instr [2] $end
$var wire 1 Z. IF_ID_instr [1] $end
$var wire 1 [. IF_ID_instr [0] $end
$var wire 1 f. IF_ID_npc [31] $end
$var wire 1 g. IF_ID_npc [30] $end
$var wire 1 h. IF_ID_npc [29] $end
$var wire 1 i. IF_ID_npc [28] $end
$var wire 1 j. IF_ID_npc [27] $end
$var wire 1 k. IF_ID_npc [26] $end
$var wire 1 l. IF_ID_npc [25] $end
$var wire 1 m. IF_ID_npc [24] $end
$var wire 1 n. IF_ID_npc [23] $end
$var wire 1 o. IF_ID_npc [22] $end
$var wire 1 p. IF_ID_npc [21] $end
$var wire 1 q. IF_ID_npc [20] $end
$var wire 1 r. IF_ID_npc [19] $end
$var wire 1 s. IF_ID_npc [18] $end
$var wire 1 t. IF_ID_npc [17] $end
$var wire 1 u. IF_ID_npc [16] $end
$var wire 1 v. IF_ID_npc [15] $end
$var wire 1 w. IF_ID_npc [14] $end
$var wire 1 x. IF_ID_npc [13] $end
$var wire 1 y. IF_ID_npc [12] $end
$var wire 1 z. IF_ID_npc [11] $end
$var wire 1 {. IF_ID_npc [10] $end
$var wire 1 |. IF_ID_npc [9] $end
$var wire 1 }. IF_ID_npc [8] $end
$var wire 1 ~. IF_ID_npc [7] $end
$var wire 1 !/ IF_ID_npc [6] $end
$var wire 1 "/ IF_ID_npc [5] $end
$var wire 1 #/ IF_ID_npc [4] $end
$var wire 1 $/ IF_ID_npc [3] $end
$var wire 1 %/ IF_ID_npc [2] $end
$var wire 1 &/ IF_ID_npc [1] $end
$var wire 1 '/ IF_ID_npc [0] $end
$var wire 1 x' EX_MEM_PCSrc $end
$var wire 1 8' EX_MEM_NPC [31] $end
$var wire 1 9' EX_MEM_NPC [30] $end
$var wire 1 :' EX_MEM_NPC [29] $end
$var wire 1 ;' EX_MEM_NPC [28] $end
$var wire 1 <' EX_MEM_NPC [27] $end
$var wire 1 =' EX_MEM_NPC [26] $end
$var wire 1 >' EX_MEM_NPC [25] $end
$var wire 1 ?' EX_MEM_NPC [24] $end
$var wire 1 @' EX_MEM_NPC [23] $end
$var wire 1 A' EX_MEM_NPC [22] $end
$var wire 1 B' EX_MEM_NPC [21] $end
$var wire 1 C' EX_MEM_NPC [20] $end
$var wire 1 D' EX_MEM_NPC [19] $end
$var wire 1 E' EX_MEM_NPC [18] $end
$var wire 1 F' EX_MEM_NPC [17] $end
$var wire 1 G' EX_MEM_NPC [16] $end
$var wire 1 H' EX_MEM_NPC [15] $end
$var wire 1 I' EX_MEM_NPC [14] $end
$var wire 1 J' EX_MEM_NPC [13] $end
$var wire 1 K' EX_MEM_NPC [12] $end
$var wire 1 L' EX_MEM_NPC [11] $end
$var wire 1 M' EX_MEM_NPC [10] $end
$var wire 1 N' EX_MEM_NPC [9] $end
$var wire 1 O' EX_MEM_NPC [8] $end
$var wire 1 P' EX_MEM_NPC [7] $end
$var wire 1 Q' EX_MEM_NPC [6] $end
$var wire 1 R' EX_MEM_NPC [5] $end
$var wire 1 S' EX_MEM_NPC [4] $end
$var wire 1 T' EX_MEM_NPC [3] $end
$var wire 1 U' EX_MEM_NPC [2] $end
$var wire 1 V' EX_MEM_NPC [1] $end
$var wire 1 W' EX_MEM_NPC [0] $end
$var wire 1 C) PC [31] $end
$var wire 1 D) PC [30] $end
$var wire 1 E) PC [29] $end
$var wire 1 F) PC [28] $end
$var wire 1 G) PC [27] $end
$var wire 1 H) PC [26] $end
$var wire 1 I) PC [25] $end
$var wire 1 J) PC [24] $end
$var wire 1 K) PC [23] $end
$var wire 1 L) PC [22] $end
$var wire 1 M) PC [21] $end
$var wire 1 N) PC [20] $end
$var wire 1 O) PC [19] $end
$var wire 1 P) PC [18] $end
$var wire 1 Q) PC [17] $end
$var wire 1 R) PC [16] $end
$var wire 1 S) PC [15] $end
$var wire 1 T) PC [14] $end
$var wire 1 U) PC [13] $end
$var wire 1 V) PC [12] $end
$var wire 1 W) PC [11] $end
$var wire 1 X) PC [10] $end
$var wire 1 Y) PC [9] $end
$var wire 1 Z) PC [8] $end
$var wire 1 [) PC [7] $end
$var wire 1 \) PC [6] $end
$var wire 1 ]) PC [5] $end
$var wire 1 ^) PC [4] $end
$var wire 1 _) PC [3] $end
$var wire 1 `) PC [2] $end
$var wire 1 a) PC [1] $end
$var wire 1 b) PC [0] $end
$var wire 1 _( dataout [31] $end
$var wire 1 `( dataout [30] $end
$var wire 1 a( dataout [29] $end
$var wire 1 b( dataout [28] $end
$var wire 1 c( dataout [27] $end
$var wire 1 d( dataout [26] $end
$var wire 1 e( dataout [25] $end
$var wire 1 f( dataout [24] $end
$var wire 1 g( dataout [23] $end
$var wire 1 h( dataout [22] $end
$var wire 1 i( dataout [21] $end
$var wire 1 j( dataout [20] $end
$var wire 1 k( dataout [19] $end
$var wire 1 l( dataout [18] $end
$var wire 1 m( dataout [17] $end
$var wire 1 n( dataout [16] $end
$var wire 1 o( dataout [15] $end
$var wire 1 p( dataout [14] $end
$var wire 1 q( dataout [13] $end
$var wire 1 r( dataout [12] $end
$var wire 1 s( dataout [11] $end
$var wire 1 t( dataout [10] $end
$var wire 1 u( dataout [9] $end
$var wire 1 v( dataout [8] $end
$var wire 1 w( dataout [7] $end
$var wire 1 x( dataout [6] $end
$var wire 1 y( dataout [5] $end
$var wire 1 z( dataout [4] $end
$var wire 1 {( dataout [3] $end
$var wire 1 |( dataout [2] $end
$var wire 1 }( dataout [1] $end
$var wire 1 ~( dataout [0] $end
$var wire 1 c) npc [31] $end
$var wire 1 d) npc [30] $end
$var wire 1 e) npc [29] $end
$var wire 1 f) npc [28] $end
$var wire 1 g) npc [27] $end
$var wire 1 h) npc [26] $end
$var wire 1 i) npc [25] $end
$var wire 1 j) npc [24] $end
$var wire 1 k) npc [23] $end
$var wire 1 l) npc [22] $end
$var wire 1 m) npc [21] $end
$var wire 1 n) npc [20] $end
$var wire 1 o) npc [19] $end
$var wire 1 p) npc [18] $end
$var wire 1 q) npc [17] $end
$var wire 1 r) npc [16] $end
$var wire 1 s) npc [15] $end
$var wire 1 t) npc [14] $end
$var wire 1 u) npc [13] $end
$var wire 1 v) npc [12] $end
$var wire 1 w) npc [11] $end
$var wire 1 x) npc [10] $end
$var wire 1 y) npc [9] $end
$var wire 1 z) npc [8] $end
$var wire 1 {) npc [7] $end
$var wire 1 |) npc [6] $end
$var wire 1 }) npc [5] $end
$var wire 1 ~) npc [4] $end
$var wire 1 !* npc [3] $end
$var wire 1 "* npc [2] $end
$var wire 1 #* npc [1] $end
$var wire 1 $* npc [0] $end
$var wire 1 y' npc_mux [31] $end
$var wire 1 z' npc_mux [30] $end
$var wire 1 {' npc_mux [29] $end
$var wire 1 |' npc_mux [28] $end
$var wire 1 }' npc_mux [27] $end
$var wire 1 ~' npc_mux [26] $end
$var wire 1 !( npc_mux [25] $end
$var wire 1 "( npc_mux [24] $end
$var wire 1 #( npc_mux [23] $end
$var wire 1 $( npc_mux [22] $end
$var wire 1 %( npc_mux [21] $end
$var wire 1 &( npc_mux [20] $end
$var wire 1 '( npc_mux [19] $end
$var wire 1 (( npc_mux [18] $end
$var wire 1 )( npc_mux [17] $end
$var wire 1 *( npc_mux [16] $end
$var wire 1 +( npc_mux [15] $end
$var wire 1 ,( npc_mux [14] $end
$var wire 1 -( npc_mux [13] $end
$var wire 1 .( npc_mux [12] $end
$var wire 1 /( npc_mux [11] $end
$var wire 1 0( npc_mux [10] $end
$var wire 1 1( npc_mux [9] $end
$var wire 1 2( npc_mux [8] $end
$var wire 1 3( npc_mux [7] $end
$var wire 1 4( npc_mux [6] $end
$var wire 1 5( npc_mux [5] $end
$var wire 1 6( npc_mux [4] $end
$var wire 1 7( npc_mux [3] $end
$var wire 1 8( npc_mux [2] $end
$var wire 1 9( npc_mux [1] $end
$var wire 1 :( npc_mux [0] $end
$scope module mux1 $end
$var wire 1 y' y [31] $end
$var wire 1 z' y [30] $end
$var wire 1 {' y [29] $end
$var wire 1 |' y [28] $end
$var wire 1 }' y [27] $end
$var wire 1 ~' y [26] $end
$var wire 1 !( y [25] $end
$var wire 1 "( y [24] $end
$var wire 1 #( y [23] $end
$var wire 1 $( y [22] $end
$var wire 1 %( y [21] $end
$var wire 1 &( y [20] $end
$var wire 1 '( y [19] $end
$var wire 1 (( y [18] $end
$var wire 1 )( y [17] $end
$var wire 1 *( y [16] $end
$var wire 1 +( y [15] $end
$var wire 1 ,( y [14] $end
$var wire 1 -( y [13] $end
$var wire 1 .( y [12] $end
$var wire 1 /( y [11] $end
$var wire 1 0( y [10] $end
$var wire 1 1( y [9] $end
$var wire 1 2( y [8] $end
$var wire 1 3( y [7] $end
$var wire 1 4( y [6] $end
$var wire 1 5( y [5] $end
$var wire 1 6( y [4] $end
$var wire 1 7( y [3] $end
$var wire 1 8( y [2] $end
$var wire 1 9( y [1] $end
$var wire 1 :( y [0] $end
$var wire 1 8' a [31] $end
$var wire 1 9' a [30] $end
$var wire 1 :' a [29] $end
$var wire 1 ;' a [28] $end
$var wire 1 <' a [27] $end
$var wire 1 =' a [26] $end
$var wire 1 >' a [25] $end
$var wire 1 ?' a [24] $end
$var wire 1 @' a [23] $end
$var wire 1 A' a [22] $end
$var wire 1 B' a [21] $end
$var wire 1 C' a [20] $end
$var wire 1 D' a [19] $end
$var wire 1 E' a [18] $end
$var wire 1 F' a [17] $end
$var wire 1 G' a [16] $end
$var wire 1 H' a [15] $end
$var wire 1 I' a [14] $end
$var wire 1 J' a [13] $end
$var wire 1 K' a [12] $end
$var wire 1 L' a [11] $end
$var wire 1 M' a [10] $end
$var wire 1 N' a [9] $end
$var wire 1 O' a [8] $end
$var wire 1 P' a [7] $end
$var wire 1 Q' a [6] $end
$var wire 1 R' a [5] $end
$var wire 1 S' a [4] $end
$var wire 1 T' a [3] $end
$var wire 1 U' a [2] $end
$var wire 1 V' a [1] $end
$var wire 1 W' a [0] $end
$var wire 1 c) b [31] $end
$var wire 1 d) b [30] $end
$var wire 1 e) b [29] $end
$var wire 1 f) b [28] $end
$var wire 1 g) b [27] $end
$var wire 1 h) b [26] $end
$var wire 1 i) b [25] $end
$var wire 1 j) b [24] $end
$var wire 1 k) b [23] $end
$var wire 1 l) b [22] $end
$var wire 1 m) b [21] $end
$var wire 1 n) b [20] $end
$var wire 1 o) b [19] $end
$var wire 1 p) b [18] $end
$var wire 1 q) b [17] $end
$var wire 1 r) b [16] $end
$var wire 1 s) b [15] $end
$var wire 1 t) b [14] $end
$var wire 1 u) b [13] $end
$var wire 1 v) b [12] $end
$var wire 1 w) b [11] $end
$var wire 1 x) b [10] $end
$var wire 1 y) b [9] $end
$var wire 1 z) b [8] $end
$var wire 1 {) b [7] $end
$var wire 1 |) b [6] $end
$var wire 1 }) b [5] $end
$var wire 1 ~) b [4] $end
$var wire 1 !* b [3] $end
$var wire 1 "* b [2] $end
$var wire 1 #* b [1] $end
$var wire 1 $* b [0] $end
$var wire 1 x' sel $end
$upscope $end
$scope module pc_mod1 $end
$var wire 1 y' npc [31] $end
$var wire 1 z' npc [30] $end
$var wire 1 {' npc [29] $end
$var wire 1 |' npc [28] $end
$var wire 1 }' npc [27] $end
$var wire 1 ~' npc [26] $end
$var wire 1 !( npc [25] $end
$var wire 1 "( npc [24] $end
$var wire 1 #( npc [23] $end
$var wire 1 $( npc [22] $end
$var wire 1 %( npc [21] $end
$var wire 1 &( npc [20] $end
$var wire 1 '( npc [19] $end
$var wire 1 (( npc [18] $end
$var wire 1 )( npc [17] $end
$var wire 1 *( npc [16] $end
$var wire 1 +( npc [15] $end
$var wire 1 ,( npc [14] $end
$var wire 1 -( npc [13] $end
$var wire 1 .( npc [12] $end
$var wire 1 /( npc [11] $end
$var wire 1 0( npc [10] $end
$var wire 1 1( npc [9] $end
$var wire 1 2( npc [8] $end
$var wire 1 3( npc [7] $end
$var wire 1 4( npc [6] $end
$var wire 1 5( npc [5] $end
$var wire 1 6( npc [4] $end
$var wire 1 7( npc [3] $end
$var wire 1 8( npc [2] $end
$var wire 1 9( npc [1] $end
$var wire 1 :( npc [0] $end
$var reg 32 ;( PC [31:0] $end
$upscope $end
$scope module memory1 $end
$var wire 1 C) addr [31] $end
$var wire 1 D) addr [30] $end
$var wire 1 E) addr [29] $end
$var wire 1 F) addr [28] $end
$var wire 1 G) addr [27] $end
$var wire 1 H) addr [26] $end
$var wire 1 I) addr [25] $end
$var wire 1 J) addr [24] $end
$var wire 1 K) addr [23] $end
$var wire 1 L) addr [22] $end
$var wire 1 M) addr [21] $end
$var wire 1 N) addr [20] $end
$var wire 1 O) addr [19] $end
$var wire 1 P) addr [18] $end
$var wire 1 Q) addr [17] $end
$var wire 1 R) addr [16] $end
$var wire 1 S) addr [15] $end
$var wire 1 T) addr [14] $end
$var wire 1 U) addr [13] $end
$var wire 1 V) addr [12] $end
$var wire 1 W) addr [11] $end
$var wire 1 X) addr [10] $end
$var wire 1 Y) addr [9] $end
$var wire 1 Z) addr [8] $end
$var wire 1 [) addr [7] $end
$var wire 1 \) addr [6] $end
$var wire 1 ]) addr [5] $end
$var wire 1 ^) addr [4] $end
$var wire 1 _) addr [3] $end
$var wire 1 `) addr [2] $end
$var wire 1 a) addr [1] $end
$var wire 1 b) addr [0] $end
$var reg 32 \( data [31:0] $end
$var reg 4096 ]( MEM [31:0] $end
$var reg 6 ^( i [5:0] $end
$upscope $end
$scope module if_id1 $end
$var wire 1 _( instr [31] $end
$var wire 1 `( instr [30] $end
$var wire 1 a( instr [29] $end
$var wire 1 b( instr [28] $end
$var wire 1 c( instr [27] $end
$var wire 1 d( instr [26] $end
$var wire 1 e( instr [25] $end
$var wire 1 f( instr [24] $end
$var wire 1 g( instr [23] $end
$var wire 1 h( instr [22] $end
$var wire 1 i( instr [21] $end
$var wire 1 j( instr [20] $end
$var wire 1 k( instr [19] $end
$var wire 1 l( instr [18] $end
$var wire 1 m( instr [17] $end
$var wire 1 n( instr [16] $end
$var wire 1 o( instr [15] $end
$var wire 1 p( instr [14] $end
$var wire 1 q( instr [13] $end
$var wire 1 r( instr [12] $end
$var wire 1 s( instr [11] $end
$var wire 1 t( instr [10] $end
$var wire 1 u( instr [9] $end
$var wire 1 v( instr [8] $end
$var wire 1 w( instr [7] $end
$var wire 1 x( instr [6] $end
$var wire 1 y( instr [5] $end
$var wire 1 z( instr [4] $end
$var wire 1 {( instr [3] $end
$var wire 1 |( instr [2] $end
$var wire 1 }( instr [1] $end
$var wire 1 ~( instr [0] $end
$var wire 1 c) npc [31] $end
$var wire 1 d) npc [30] $end
$var wire 1 e) npc [29] $end
$var wire 1 f) npc [28] $end
$var wire 1 g) npc [27] $end
$var wire 1 h) npc [26] $end
$var wire 1 i) npc [25] $end
$var wire 1 j) npc [24] $end
$var wire 1 k) npc [23] $end
$var wire 1 l) npc [22] $end
$var wire 1 m) npc [21] $end
$var wire 1 n) npc [20] $end
$var wire 1 o) npc [19] $end
$var wire 1 p) npc [18] $end
$var wire 1 q) npc [17] $end
$var wire 1 r) npc [16] $end
$var wire 1 s) npc [15] $end
$var wire 1 t) npc [14] $end
$var wire 1 u) npc [13] $end
$var wire 1 v) npc [12] $end
$var wire 1 w) npc [11] $end
$var wire 1 x) npc [10] $end
$var wire 1 y) npc [9] $end
$var wire 1 z) npc [8] $end
$var wire 1 {) npc [7] $end
$var wire 1 |) npc [6] $end
$var wire 1 }) npc [5] $end
$var wire 1 ~) npc [4] $end
$var wire 1 !* npc [3] $end
$var wire 1 "* npc [2] $end
$var wire 1 #* npc [1] $end
$var wire 1 $* npc [0] $end
$var reg 32 A) instrout [31:0] $end
$var reg 32 B) npcout [31:0] $end
$upscope $end
$scope module incrementer1 $end
$var wire 1 C) pcin [31] $end
$var wire 1 D) pcin [30] $end
$var wire 1 E) pcin [29] $end
$var wire 1 F) pcin [28] $end
$var wire 1 G) pcin [27] $end
$var wire 1 H) pcin [26] $end
$var wire 1 I) pcin [25] $end
$var wire 1 J) pcin [24] $end
$var wire 1 K) pcin [23] $end
$var wire 1 L) pcin [22] $end
$var wire 1 M) pcin [21] $end
$var wire 1 N) pcin [20] $end
$var wire 1 O) pcin [19] $end
$var wire 1 P) pcin [18] $end
$var wire 1 Q) pcin [17] $end
$var wire 1 R) pcin [16] $end
$var wire 1 S) pcin [15] $end
$var wire 1 T) pcin [14] $end
$var wire 1 U) pcin [13] $end
$var wire 1 V) pcin [12] $end
$var wire 1 W) pcin [11] $end
$var wire 1 X) pcin [10] $end
$var wire 1 Y) pcin [9] $end
$var wire 1 Z) pcin [8] $end
$var wire 1 [) pcin [7] $end
$var wire 1 \) pcin [6] $end
$var wire 1 ]) pcin [5] $end
$var wire 1 ^) pcin [4] $end
$var wire 1 _) pcin [3] $end
$var wire 1 `) pcin [2] $end
$var wire 1 a) pcin [1] $end
$var wire 1 b) pcin [0] $end
$var wire 1 c) pcout [31] $end
$var wire 1 d) pcout [30] $end
$var wire 1 e) pcout [29] $end
$var wire 1 f) pcout [28] $end
$var wire 1 g) pcout [27] $end
$var wire 1 h) pcout [26] $end
$var wire 1 i) pcout [25] $end
$var wire 1 j) pcout [24] $end
$var wire 1 k) pcout [23] $end
$var wire 1 l) pcout [22] $end
$var wire 1 m) pcout [21] $end
$var wire 1 n) pcout [20] $end
$var wire 1 o) pcout [19] $end
$var wire 1 p) pcout [18] $end
$var wire 1 q) pcout [17] $end
$var wire 1 r) pcout [16] $end
$var wire 1 s) pcout [15] $end
$var wire 1 t) pcout [14] $end
$var wire 1 u) pcout [13] $end
$var wire 1 v) pcout [12] $end
$var wire 1 w) pcout [11] $end
$var wire 1 x) pcout [10] $end
$var wire 1 y) pcout [9] $end
$var wire 1 z) pcout [8] $end
$var wire 1 {) pcout [7] $end
$var wire 1 |) pcout [6] $end
$var wire 1 }) pcout [5] $end
$var wire 1 ~) pcout [4] $end
$var wire 1 !* pcout [3] $end
$var wire 1 "* pcout [2] $end
$var wire 1 #* pcout [1] $end
$var wire 1 $* pcout [0] $end
$upscope $end
$upscope $end
$scope module IDECODE1 $end
$var wire 1 m- IF_ID_instrout [31] $end
$var wire 1 n- IF_ID_instrout [30] $end
$var wire 1 o- IF_ID_instrout [29] $end
$var wire 1 p- IF_ID_instrout [28] $end
$var wire 1 q- IF_ID_instrout [27] $end
$var wire 1 r- IF_ID_instrout [26] $end
$var wire 1 v- IF_ID_instrout [25] $end
$var wire 1 w- IF_ID_instrout [24] $end
$var wire 1 x- IF_ID_instrout [23] $end
$var wire 1 y- IF_ID_instrout [22] $end
$var wire 1 z- IF_ID_instrout [21] $end
$var wire 1 *0 IF_ID_instrout [20] $end
$var wire 1 +0 IF_ID_instrout [19] $end
$var wire 1 ,0 IF_ID_instrout [18] $end
$var wire 1 -0 IF_ID_instrout [17] $end
$var wire 1 .0 IF_ID_instrout [16] $end
$var wire 1 /0 IF_ID_instrout [15] $end
$var wire 1 00 IF_ID_instrout [14] $end
$var wire 1 10 IF_ID_instrout [13] $end
$var wire 1 20 IF_ID_instrout [12] $end
$var wire 1 30 IF_ID_instrout [11] $end
$var wire 1 Q. IF_ID_instrout [10] $end
$var wire 1 R. IF_ID_instrout [9] $end
$var wire 1 S. IF_ID_instrout [8] $end
$var wire 1 T. IF_ID_instrout [7] $end
$var wire 1 U. IF_ID_instrout [6] $end
$var wire 1 V. IF_ID_instrout [5] $end
$var wire 1 W. IF_ID_instrout [4] $end
$var wire 1 X. IF_ID_instrout [3] $end
$var wire 1 Y. IF_ID_instrout [2] $end
$var wire 1 Z. IF_ID_instrout [1] $end
$var wire 1 [. IF_ID_instrout [0] $end
$var wire 1 f. IF_ID_npcout [31] $end
$var wire 1 g. IF_ID_npcout [30] $end
$var wire 1 h. IF_ID_npcout [29] $end
$var wire 1 i. IF_ID_npcout [28] $end
$var wire 1 j. IF_ID_npcout [27] $end
$var wire 1 k. IF_ID_npcout [26] $end
$var wire 1 l. IF_ID_npcout [25] $end
$var wire 1 m. IF_ID_npcout [24] $end
$var wire 1 n. IF_ID_npcout [23] $end
$var wire 1 o. IF_ID_npcout [22] $end
$var wire 1 p. IF_ID_npcout [21] $end
$var wire 1 q. IF_ID_npcout [20] $end
$var wire 1 r. IF_ID_npcout [19] $end
$var wire 1 s. IF_ID_npcout [18] $end
$var wire 1 t. IF_ID_npcout [17] $end
$var wire 1 u. IF_ID_npcout [16] $end
$var wire 1 v. IF_ID_npcout [15] $end
$var wire 1 w. IF_ID_npcout [14] $end
$var wire 1 x. IF_ID_npcout [13] $end
$var wire 1 y. IF_ID_npcout [12] $end
$var wire 1 z. IF_ID_npcout [11] $end
$var wire 1 {. IF_ID_npcout [10] $end
$var wire 1 |. IF_ID_npcout [9] $end
$var wire 1 }. IF_ID_npcout [8] $end
$var wire 1 ~. IF_ID_npcout [7] $end
$var wire 1 !/ IF_ID_npcout [6] $end
$var wire 1 "/ IF_ID_npcout [5] $end
$var wire 1 #/ IF_ID_npcout [4] $end
$var wire 1 $/ IF_ID_npcout [3] $end
$var wire 1 %/ IF_ID_npcout [2] $end
$var wire 1 &/ IF_ID_npcout [1] $end
$var wire 1 '/ IF_ID_npcout [0] $end
$var wire 1 z9 MEM_WB_rd [4] $end
$var wire 1 {9 MEM_WB_rd [3] $end
$var wire 1 |9 MEM_WB_rd [2] $end
$var wire 1 }9 MEM_WB_rd [1] $end
$var wire 1 ~9 MEM_WB_rd [0] $end
$var wire 1 89 MEM_WB_regwrite $end
$var wire 1 z< WB_mux5_writedata [31] $end
$var wire 1 {< WB_mux5_writedata [30] $end
$var wire 1 |< WB_mux5_writedata [29] $end
$var wire 1 }< WB_mux5_writedata [28] $end
$var wire 1 ~< WB_mux5_writedata [27] $end
$var wire 1 != WB_mux5_writedata [26] $end
$var wire 1 "= WB_mux5_writedata [25] $end
$var wire 1 #= WB_mux5_writedata [24] $end
$var wire 1 $= WB_mux5_writedata [23] $end
$var wire 1 %= WB_mux5_writedata [22] $end
$var wire 1 &= WB_mux5_writedata [21] $end
$var wire 1 '= WB_mux5_writedata [20] $end
$var wire 1 (= WB_mux5_writedata [19] $end
$var wire 1 )= WB_mux5_writedata [18] $end
$var wire 1 *= WB_mux5_writedata [17] $end
$var wire 1 += WB_mux5_writedata [16] $end
$var wire 1 ,= WB_mux5_writedata [15] $end
$var wire 1 -= WB_mux5_writedata [14] $end
$var wire 1 .= WB_mux5_writedata [13] $end
$var wire 1 /= WB_mux5_writedata [12] $end
$var wire 1 0= WB_mux5_writedata [11] $end
$var wire 1 1= WB_mux5_writedata [10] $end
$var wire 1 2= WB_mux5_writedata [9] $end
$var wire 1 3= WB_mux5_writedata [8] $end
$var wire 1 4= WB_mux5_writedata [7] $end
$var wire 1 5= WB_mux5_writedata [6] $end
$var wire 1 6= WB_mux5_writedata [5] $end
$var wire 1 7= WB_mux5_writedata [4] $end
$var wire 1 8= WB_mux5_writedata [3] $end
$var wire 1 9= WB_mux5_writedata [2] $end
$var wire 1 := WB_mux5_writedata [1] $end
$var wire 1 ;= WB_mux5_writedata [0] $end
$var wire 1 47 wb_ctlout [1] $end
$var wire 1 57 wb_ctlout [0] $end
$var wire 1 67 m_ctlout [2] $end
$var wire 1 77 m_ctlout [1] $end
$var wire 1 87 m_ctlout [0] $end
$var wire 1 37 regdst $end
$var wire 1 #7 alusrc $end
$var wire 1 |5 aluop [1] $end
$var wire 1 }5 aluop [0] $end
$var wire 1 .4 npcout [31] $end
$var wire 1 /4 npcout [30] $end
$var wire 1 04 npcout [29] $end
$var wire 1 14 npcout [28] $end
$var wire 1 24 npcout [27] $end
$var wire 1 34 npcout [26] $end
$var wire 1 44 npcout [25] $end
$var wire 1 54 npcout [24] $end
$var wire 1 64 npcout [23] $end
$var wire 1 74 npcout [22] $end
$var wire 1 84 npcout [21] $end
$var wire 1 94 npcout [20] $end
$var wire 1 :4 npcout [19] $end
$var wire 1 ;4 npcout [18] $end
$var wire 1 <4 npcout [17] $end
$var wire 1 =4 npcout [16] $end
$var wire 1 >4 npcout [15] $end
$var wire 1 ?4 npcout [14] $end
$var wire 1 @4 npcout [13] $end
$var wire 1 A4 npcout [12] $end
$var wire 1 B4 npcout [11] $end
$var wire 1 C4 npcout [10] $end
$var wire 1 D4 npcout [9] $end
$var wire 1 E4 npcout [8] $end
$var wire 1 F4 npcout [7] $end
$var wire 1 G4 npcout [6] $end
$var wire 1 H4 npcout [5] $end
$var wire 1 I4 npcout [4] $end
$var wire 1 J4 npcout [3] $end
$var wire 1 K4 npcout [2] $end
$var wire 1 L4 npcout [1] $end
$var wire 1 M4 npcout [0] $end
$var wire 1 05 rdata1out [31] $end
$var wire 1 15 rdata1out [30] $end
$var wire 1 25 rdata1out [29] $end
$var wire 1 35 rdata1out [28] $end
$var wire 1 45 rdata1out [27] $end
$var wire 1 55 rdata1out [26] $end
$var wire 1 65 rdata1out [25] $end
$var wire 1 75 rdata1out [24] $end
$var wire 1 85 rdata1out [23] $end
$var wire 1 95 rdata1out [22] $end
$var wire 1 :5 rdata1out [21] $end
$var wire 1 ;5 rdata1out [20] $end
$var wire 1 <5 rdata1out [19] $end
$var wire 1 =5 rdata1out [18] $end
$var wire 1 >5 rdata1out [17] $end
$var wire 1 ?5 rdata1out [16] $end
$var wire 1 @5 rdata1out [15] $end
$var wire 1 A5 rdata1out [14] $end
$var wire 1 B5 rdata1out [13] $end
$var wire 1 C5 rdata1out [12] $end
$var wire 1 D5 rdata1out [11] $end
$var wire 1 E5 rdata1out [10] $end
$var wire 1 F5 rdata1out [9] $end
$var wire 1 G5 rdata1out [8] $end
$var wire 1 H5 rdata1out [7] $end
$var wire 1 I5 rdata1out [6] $end
$var wire 1 J5 rdata1out [5] $end
$var wire 1 K5 rdata1out [4] $end
$var wire 1 L5 rdata1out [3] $end
$var wire 1 M5 rdata1out [2] $end
$var wire 1 N5 rdata1out [1] $end
$var wire 1 O5 rdata1out [0] $end
$var wire 1 z7 rdata2out [31] $end
$var wire 1 {7 rdata2out [30] $end
$var wire 1 |7 rdata2out [29] $end
$var wire 1 }7 rdata2out [28] $end
$var wire 1 ~7 rdata2out [27] $end
$var wire 1 !8 rdata2out [26] $end
$var wire 1 "8 rdata2out [25] $end
$var wire 1 #8 rdata2out [24] $end
$var wire 1 $8 rdata2out [23] $end
$var wire 1 %8 rdata2out [22] $end
$var wire 1 &8 rdata2out [21] $end
$var wire 1 '8 rdata2out [20] $end
$var wire 1 (8 rdata2out [19] $end
$var wire 1 )8 rdata2out [18] $end
$var wire 1 *8 rdata2out [17] $end
$var wire 1 +8 rdata2out [16] $end
$var wire 1 ,8 rdata2out [15] $end
$var wire 1 -8 rdata2out [14] $end
$var wire 1 .8 rdata2out [13] $end
$var wire 1 /8 rdata2out [12] $end
$var wire 1 08 rdata2out [11] $end
$var wire 1 18 rdata2out [10] $end
$var wire 1 28 rdata2out [9] $end
$var wire 1 38 rdata2out [8] $end
$var wire 1 48 rdata2out [7] $end
$var wire 1 58 rdata2out [6] $end
$var wire 1 68 rdata2out [5] $end
$var wire 1 78 rdata2out [4] $end
$var wire 1 88 rdata2out [3] $end
$var wire 1 98 rdata2out [2] $end
$var wire 1 :8 rdata2out [1] $end
$var wire 1 ;8 rdata2out [0] $end
$var wire 1 A6 s_extendout [31] $end
$var wire 1 B6 s_extendout [30] $end
$var wire 1 C6 s_extendout [29] $end
$var wire 1 D6 s_extendout [28] $end
$var wire 1 E6 s_extendout [27] $end
$var wire 1 F6 s_extendout [26] $end
$var wire 1 G6 s_extendout [25] $end
$var wire 1 H6 s_extendout [24] $end
$var wire 1 I6 s_extendout [23] $end
$var wire 1 J6 s_extendout [22] $end
$var wire 1 K6 s_extendout [21] $end
$var wire 1 L6 s_extendout [20] $end
$var wire 1 M6 s_extendout [19] $end
$var wire 1 N6 s_extendout [18] $end
$var wire 1 O6 s_extendout [17] $end
$var wire 1 P6 s_extendout [16] $end
$var wire 1 Q6 s_extendout [15] $end
$var wire 1 R6 s_extendout [14] $end
$var wire 1 S6 s_extendout [13] $end
$var wire 1 T6 s_extendout [12] $end
$var wire 1 U6 s_extendout [11] $end
$var wire 1 V6 s_extendout [10] $end
$var wire 1 W6 s_extendout [9] $end
$var wire 1 X6 s_extendout [8] $end
$var wire 1 Y6 s_extendout [7] $end
$var wire 1 Z6 s_extendout [6] $end
$var wire 1 [6 s_extendout [5] $end
$var wire 1 \6 s_extendout [4] $end
$var wire 1 ]6 s_extendout [3] $end
$var wire 1 ^6 s_extendout [2] $end
$var wire 1 _6 s_extendout [1] $end
$var wire 1 `6 s_extendout [0] $end
$var wire 1 .7 instrout_2016 [4] $end
$var wire 1 /7 instrout_2016 [3] $end
$var wire 1 07 instrout_2016 [2] $end
$var wire 1 17 instrout_2016 [1] $end
$var wire 1 27 instrout_2016 [0] $end
$var wire 1 )7 instrout_1511 [4] $end
$var wire 1 *7 instrout_1511 [3] $end
$var wire 1 +7 instrout_1511 [2] $end
$var wire 1 ,7 instrout_1511 [1] $end
$var wire 1 -7 instrout_1511 [0] $end
$var wire 1 b. ctlex_out [3] $end
$var wire 1 c. ctlex_out [2] $end
$var wire 1 d. ctlex_out [1] $end
$var wire 1 e. ctlex_out [0] $end
$var wire 1 _. ctlm_out [2] $end
$var wire 1 `. ctlm_out [1] $end
$var wire 1 a. ctlm_out [0] $end
$var wire 1 ]. ctlwb_out [1] $end
$var wire 1 ^. ctlwb_out [0] $end
$var wire 1 (/ readdat1 [31] $end
$var wire 1 )/ readdat1 [30] $end
$var wire 1 */ readdat1 [29] $end
$var wire 1 +/ readdat1 [28] $end
$var wire 1 ,/ readdat1 [27] $end
$var wire 1 -/ readdat1 [26] $end
$var wire 1 ./ readdat1 [25] $end
$var wire 1 // readdat1 [24] $end
$var wire 1 0/ readdat1 [23] $end
$var wire 1 1/ readdat1 [22] $end
$var wire 1 2/ readdat1 [21] $end
$var wire 1 3/ readdat1 [20] $end
$var wire 1 4/ readdat1 [19] $end
$var wire 1 5/ readdat1 [18] $end
$var wire 1 6/ readdat1 [17] $end
$var wire 1 7/ readdat1 [16] $end
$var wire 1 8/ readdat1 [15] $end
$var wire 1 9/ readdat1 [14] $end
$var wire 1 :/ readdat1 [13] $end
$var wire 1 ;/ readdat1 [12] $end
$var wire 1 </ readdat1 [11] $end
$var wire 1 =/ readdat1 [10] $end
$var wire 1 >/ readdat1 [9] $end
$var wire 1 ?/ readdat1 [8] $end
$var wire 1 @/ readdat1 [7] $end
$var wire 1 A/ readdat1 [6] $end
$var wire 1 B/ readdat1 [5] $end
$var wire 1 C/ readdat1 [4] $end
$var wire 1 D/ readdat1 [3] $end
$var wire 1 E/ readdat1 [2] $end
$var wire 1 F/ readdat1 [1] $end
$var wire 1 G/ readdat1 [0] $end
$var wire 1 H/ readdat2 [31] $end
$var wire 1 I/ readdat2 [30] $end
$var wire 1 J/ readdat2 [29] $end
$var wire 1 K/ readdat2 [28] $end
$var wire 1 L/ readdat2 [27] $end
$var wire 1 M/ readdat2 [26] $end
$var wire 1 N/ readdat2 [25] $end
$var wire 1 O/ readdat2 [24] $end
$var wire 1 P/ readdat2 [23] $end
$var wire 1 Q/ readdat2 [22] $end
$var wire 1 R/ readdat2 [21] $end
$var wire 1 S/ readdat2 [20] $end
$var wire 1 T/ readdat2 [19] $end
$var wire 1 U/ readdat2 [18] $end
$var wire 1 V/ readdat2 [17] $end
$var wire 1 W/ readdat2 [16] $end
$var wire 1 X/ readdat2 [15] $end
$var wire 1 Y/ readdat2 [14] $end
$var wire 1 Z/ readdat2 [13] $end
$var wire 1 [/ readdat2 [12] $end
$var wire 1 \/ readdat2 [11] $end
$var wire 1 ]/ readdat2 [10] $end
$var wire 1 ^/ readdat2 [9] $end
$var wire 1 _/ readdat2 [8] $end
$var wire 1 `/ readdat2 [7] $end
$var wire 1 a/ readdat2 [6] $end
$var wire 1 b/ readdat2 [5] $end
$var wire 1 c/ readdat2 [4] $end
$var wire 1 d/ readdat2 [3] $end
$var wire 1 e/ readdat2 [2] $end
$var wire 1 f/ readdat2 [1] $end
$var wire 1 g/ readdat2 [0] $end
$var wire 1 h/ signext_out [31] $end
$var wire 1 i/ signext_out [30] $end
$var wire 1 j/ signext_out [29] $end
$var wire 1 k/ signext_out [28] $end
$var wire 1 l/ signext_out [27] $end
$var wire 1 m/ signext_out [26] $end
$var wire 1 n/ signext_out [25] $end
$var wire 1 o/ signext_out [24] $end
$var wire 1 p/ signext_out [23] $end
$var wire 1 q/ signext_out [22] $end
$var wire 1 r/ signext_out [21] $end
$var wire 1 s/ signext_out [20] $end
$var wire 1 t/ signext_out [19] $end
$var wire 1 u/ signext_out [18] $end
$var wire 1 v/ signext_out [17] $end
$var wire 1 w/ signext_out [16] $end
$var wire 1 x/ signext_out [15] $end
$var wire 1 y/ signext_out [14] $end
$var wire 1 z/ signext_out [13] $end
$var wire 1 {/ signext_out [12] $end
$var wire 1 |/ signext_out [11] $end
$var wire 1 }/ signext_out [10] $end
$var wire 1 ~/ signext_out [9] $end
$var wire 1 !0 signext_out [8] $end
$var wire 1 "0 signext_out [7] $end
$var wire 1 #0 signext_out [6] $end
$var wire 1 $0 signext_out [5] $end
$var wire 1 %0 signext_out [4] $end
$var wire 1 &0 signext_out [3] $end
$var wire 1 '0 signext_out [2] $end
$var wire 1 (0 signext_out [1] $end
$var wire 1 )0 signext_out [0] $end
$scope module control2 $end
$var wire 1 m- opcode [5] $end
$var wire 1 n- opcode [4] $end
$var wire 1 o- opcode [3] $end
$var wire 1 p- opcode [2] $end
$var wire 1 q- opcode [1] $end
$var wire 1 r- opcode [0] $end
$var reg 4 s- EX [3:0] $end
$var reg 3 t- M [2:0] $end
$var reg 2 u- WB [1:0] $end
$upscope $end
$scope module register2 $end
$var wire 1 v- rs [4] $end
$var wire 1 w- rs [3] $end
$var wire 1 x- rs [2] $end
$var wire 1 y- rs [1] $end
$var wire 1 z- rs [0] $end
$var wire 1 *0 rt [4] $end
$var wire 1 +0 rt [3] $end
$var wire 1 ,0 rt [2] $end
$var wire 1 -0 rt [1] $end
$var wire 1 .0 rt [0] $end
$var wire 1 z9 rd [4] $end
$var wire 1 {9 rd [3] $end
$var wire 1 |9 rd [2] $end
$var wire 1 }9 rd [1] $end
$var wire 1 ~9 rd [0] $end
$var wire 1 z< writedata [31] $end
$var wire 1 {< writedata [30] $end
$var wire 1 |< writedata [29] $end
$var wire 1 }< writedata [28] $end
$var wire 1 ~< writedata [27] $end
$var wire 1 != writedata [26] $end
$var wire 1 "= writedata [25] $end
$var wire 1 #= writedata [24] $end
$var wire 1 $= writedata [23] $end
$var wire 1 %= writedata [22] $end
$var wire 1 &= writedata [21] $end
$var wire 1 '= writedata [20] $end
$var wire 1 (= writedata [19] $end
$var wire 1 )= writedata [18] $end
$var wire 1 *= writedata [17] $end
$var wire 1 += writedata [16] $end
$var wire 1 ,= writedata [15] $end
$var wire 1 -= writedata [14] $end
$var wire 1 .= writedata [13] $end
$var wire 1 /= writedata [12] $end
$var wire 1 0= writedata [11] $end
$var wire 1 1= writedata [10] $end
$var wire 1 2= writedata [9] $end
$var wire 1 3= writedata [8] $end
$var wire 1 4= writedata [7] $end
$var wire 1 5= writedata [6] $end
$var wire 1 6= writedata [5] $end
$var wire 1 7= writedata [4] $end
$var wire 1 8= writedata [3] $end
$var wire 1 9= writedata [2] $end
$var wire 1 := writedata [1] $end
$var wire 1 ;= writedata [0] $end
$var wire 1 89 regwrite $end
$var reg 32 H. A [31:0] $end
$var reg 32 I. B [31:0] $end
$var reg 1024 J. REG [31:0] $end
$var integer 32 K. i $end
$upscope $end
$scope module s_extend2 $end
$var wire 1 /0 nextend [15] $end
$var wire 1 00 nextend [14] $end
$var wire 1 10 nextend [13] $end
$var wire 1 20 nextend [12] $end
$var wire 1 30 nextend [11] $end
$var wire 1 Q. nextend [10] $end
$var wire 1 R. nextend [9] $end
$var wire 1 S. nextend [8] $end
$var wire 1 T. nextend [7] $end
$var wire 1 U. nextend [6] $end
$var wire 1 V. nextend [5] $end
$var wire 1 W. nextend [4] $end
$var wire 1 X. nextend [3] $end
$var wire 1 Y. nextend [2] $end
$var wire 1 Z. nextend [1] $end
$var wire 1 [. nextend [0] $end
$var reg 32 \. extend [31:0] $end
$upscope $end
$scope module id_ex2 $end
$var wire 1 ]. ctlwb_out [1] $end
$var wire 1 ^. ctlwb_out [0] $end
$var wire 1 _. ctlm_out [2] $end
$var wire 1 `. ctlm_out [1] $end
$var wire 1 a. ctlm_out [0] $end
$var wire 1 b. ctlex_out [3] $end
$var wire 1 c. ctlex_out [2] $end
$var wire 1 d. ctlex_out [1] $end
$var wire 1 e. ctlex_out [0] $end
$var wire 1 f. npc [31] $end
$var wire 1 g. npc [30] $end
$var wire 1 h. npc [29] $end
$var wire 1 i. npc [28] $end
$var wire 1 j. npc [27] $end
$var wire 1 k. npc [26] $end
$var wire 1 l. npc [25] $end
$var wire 1 m. npc [24] $end
$var wire 1 n. npc [23] $end
$var wire 1 o. npc [22] $end
$var wire 1 p. npc [21] $end
$var wire 1 q. npc [20] $end
$var wire 1 r. npc [19] $end
$var wire 1 s. npc [18] $end
$var wire 1 t. npc [17] $end
$var wire 1 u. npc [16] $end
$var wire 1 v. npc [15] $end
$var wire 1 w. npc [14] $end
$var wire 1 x. npc [13] $end
$var wire 1 y. npc [12] $end
$var wire 1 z. npc [11] $end
$var wire 1 {. npc [10] $end
$var wire 1 |. npc [9] $end
$var wire 1 }. npc [8] $end
$var wire 1 ~. npc [7] $end
$var wire 1 !/ npc [6] $end
$var wire 1 "/ npc [5] $end
$var wire 1 #/ npc [4] $end
$var wire 1 $/ npc [3] $end
$var wire 1 %/ npc [2] $end
$var wire 1 &/ npc [1] $end
$var wire 1 '/ npc [0] $end
$var wire 1 (/ readdat1 [31] $end
$var wire 1 )/ readdat1 [30] $end
$var wire 1 */ readdat1 [29] $end
$var wire 1 +/ readdat1 [28] $end
$var wire 1 ,/ readdat1 [27] $end
$var wire 1 -/ readdat1 [26] $end
$var wire 1 ./ readdat1 [25] $end
$var wire 1 // readdat1 [24] $end
$var wire 1 0/ readdat1 [23] $end
$var wire 1 1/ readdat1 [22] $end
$var wire 1 2/ readdat1 [21] $end
$var wire 1 3/ readdat1 [20] $end
$var wire 1 4/ readdat1 [19] $end
$var wire 1 5/ readdat1 [18] $end
$var wire 1 6/ readdat1 [17] $end
$var wire 1 7/ readdat1 [16] $end
$var wire 1 8/ readdat1 [15] $end
$var wire 1 9/ readdat1 [14] $end
$var wire 1 :/ readdat1 [13] $end
$var wire 1 ;/ readdat1 [12] $end
$var wire 1 </ readdat1 [11] $end
$var wire 1 =/ readdat1 [10] $end
$var wire 1 >/ readdat1 [9] $end
$var wire 1 ?/ readdat1 [8] $end
$var wire 1 @/ readdat1 [7] $end
$var wire 1 A/ readdat1 [6] $end
$var wire 1 B/ readdat1 [5] $end
$var wire 1 C/ readdat1 [4] $end
$var wire 1 D/ readdat1 [3] $end
$var wire 1 E/ readdat1 [2] $end
$var wire 1 F/ readdat1 [1] $end
$var wire 1 G/ readdat1 [0] $end
$var wire 1 H/ readdat2 [31] $end
$var wire 1 I/ readdat2 [30] $end
$var wire 1 J/ readdat2 [29] $end
$var wire 1 K/ readdat2 [28] $end
$var wire 1 L/ readdat2 [27] $end
$var wire 1 M/ readdat2 [26] $end
$var wire 1 N/ readdat2 [25] $end
$var wire 1 O/ readdat2 [24] $end
$var wire 1 P/ readdat2 [23] $end
$var wire 1 Q/ readdat2 [22] $end
$var wire 1 R/ readdat2 [21] $end
$var wire 1 S/ readdat2 [20] $end
$var wire 1 T/ readdat2 [19] $end
$var wire 1 U/ readdat2 [18] $end
$var wire 1 V/ readdat2 [17] $end
$var wire 1 W/ readdat2 [16] $end
$var wire 1 X/ readdat2 [15] $end
$var wire 1 Y/ readdat2 [14] $end
$var wire 1 Z/ readdat2 [13] $end
$var wire 1 [/ readdat2 [12] $end
$var wire 1 \/ readdat2 [11] $end
$var wire 1 ]/ readdat2 [10] $end
$var wire 1 ^/ readdat2 [9] $end
$var wire 1 _/ readdat2 [8] $end
$var wire 1 `/ readdat2 [7] $end
$var wire 1 a/ readdat2 [6] $end
$var wire 1 b/ readdat2 [5] $end
$var wire 1 c/ readdat2 [4] $end
$var wire 1 d/ readdat2 [3] $end
$var wire 1 e/ readdat2 [2] $end
$var wire 1 f/ readdat2 [1] $end
$var wire 1 g/ readdat2 [0] $end
$var wire 1 h/ signext_out [31] $end
$var wire 1 i/ signext_out [30] $end
$var wire 1 j/ signext_out [29] $end
$var wire 1 k/ signext_out [28] $end
$var wire 1 l/ signext_out [27] $end
$var wire 1 m/ signext_out [26] $end
$var wire 1 n/ signext_out [25] $end
$var wire 1 o/ signext_out [24] $end
$var wire 1 p/ signext_out [23] $end
$var wire 1 q/ signext_out [22] $end
$var wire 1 r/ signext_out [21] $end
$var wire 1 s/ signext_out [20] $end
$var wire 1 t/ signext_out [19] $end
$var wire 1 u/ signext_out [18] $end
$var wire 1 v/ signext_out [17] $end
$var wire 1 w/ signext_out [16] $end
$var wire 1 x/ signext_out [15] $end
$var wire 1 y/ signext_out [14] $end
$var wire 1 z/ signext_out [13] $end
$var wire 1 {/ signext_out [12] $end
$var wire 1 |/ signext_out [11] $end
$var wire 1 }/ signext_out [10] $end
$var wire 1 ~/ signext_out [9] $end
$var wire 1 !0 signext_out [8] $end
$var wire 1 "0 signext_out [7] $end
$var wire 1 #0 signext_out [6] $end
$var wire 1 $0 signext_out [5] $end
$var wire 1 %0 signext_out [4] $end
$var wire 1 &0 signext_out [3] $end
$var wire 1 '0 signext_out [2] $end
$var wire 1 (0 signext_out [1] $end
$var wire 1 )0 signext_out [0] $end
$var wire 1 *0 instr_2016 [4] $end
$var wire 1 +0 instr_2016 [3] $end
$var wire 1 ,0 instr_2016 [2] $end
$var wire 1 -0 instr_2016 [1] $end
$var wire 1 .0 instr_2016 [0] $end
$var wire 1 /0 instr_1511 [4] $end
$var wire 1 00 instr_1511 [3] $end
$var wire 1 10 instr_1511 [2] $end
$var wire 1 20 instr_1511 [1] $end
$var wire 1 30 instr_1511 [0] $end
$var reg 2 40 wb_ctlout [1:0] $end
$var reg 3 50 m_ctlout [2:0] $end
$var reg 1 60 regdst $end
$var reg 1 70 alusrc $end
$var reg 2 80 aluop [1:0] $end
$var reg 32 90 npcout [31:0] $end
$var reg 32 :0 rdata1out [31:0] $end
$var reg 32 ;0 rdata2out [31:0] $end
$var reg 32 <0 s_extendout [31:0] $end
$var reg 5 =0 instrout_2016 [4:0] $end
$var reg 5 >0 instrout_1511 [4:0] $end
$upscope $end
$upscope $end
$scope module EXECUTE1 $end
$var wire 1 47 wb_ctl [1] $end
$var wire 1 57 wb_ctl [0] $end
$var wire 1 67 m_ctl [2] $end
$var wire 1 77 m_ctl [1] $end
$var wire 1 87 m_ctl [0] $end
$var wire 1 37 regdst $end
$var wire 1 #7 alusrc $end
$var wire 1 |5 aluop [1] $end
$var wire 1 }5 aluop [0] $end
$var wire 1 .4 npcout [31] $end
$var wire 1 /4 npcout [30] $end
$var wire 1 04 npcout [29] $end
$var wire 1 14 npcout [28] $end
$var wire 1 24 npcout [27] $end
$var wire 1 34 npcout [26] $end
$var wire 1 44 npcout [25] $end
$var wire 1 54 npcout [24] $end
$var wire 1 64 npcout [23] $end
$var wire 1 74 npcout [22] $end
$var wire 1 84 npcout [21] $end
$var wire 1 94 npcout [20] $end
$var wire 1 :4 npcout [19] $end
$var wire 1 ;4 npcout [18] $end
$var wire 1 <4 npcout [17] $end
$var wire 1 =4 npcout [16] $end
$var wire 1 >4 npcout [15] $end
$var wire 1 ?4 npcout [14] $end
$var wire 1 @4 npcout [13] $end
$var wire 1 A4 npcout [12] $end
$var wire 1 B4 npcout [11] $end
$var wire 1 C4 npcout [10] $end
$var wire 1 D4 npcout [9] $end
$var wire 1 E4 npcout [8] $end
$var wire 1 F4 npcout [7] $end
$var wire 1 G4 npcout [6] $end
$var wire 1 H4 npcout [5] $end
$var wire 1 I4 npcout [4] $end
$var wire 1 J4 npcout [3] $end
$var wire 1 K4 npcout [2] $end
$var wire 1 L4 npcout [1] $end
$var wire 1 M4 npcout [0] $end
$var wire 1 05 rdata1 [31] $end
$var wire 1 15 rdata1 [30] $end
$var wire 1 25 rdata1 [29] $end
$var wire 1 35 rdata1 [28] $end
$var wire 1 45 rdata1 [27] $end
$var wire 1 55 rdata1 [26] $end
$var wire 1 65 rdata1 [25] $end
$var wire 1 75 rdata1 [24] $end
$var wire 1 85 rdata1 [23] $end
$var wire 1 95 rdata1 [22] $end
$var wire 1 :5 rdata1 [21] $end
$var wire 1 ;5 rdata1 [20] $end
$var wire 1 <5 rdata1 [19] $end
$var wire 1 =5 rdata1 [18] $end
$var wire 1 >5 rdata1 [17] $end
$var wire 1 ?5 rdata1 [16] $end
$var wire 1 @5 rdata1 [15] $end
$var wire 1 A5 rdata1 [14] $end
$var wire 1 B5 rdata1 [13] $end
$var wire 1 C5 rdata1 [12] $end
$var wire 1 D5 rdata1 [11] $end
$var wire 1 E5 rdata1 [10] $end
$var wire 1 F5 rdata1 [9] $end
$var wire 1 G5 rdata1 [8] $end
$var wire 1 H5 rdata1 [7] $end
$var wire 1 I5 rdata1 [6] $end
$var wire 1 J5 rdata1 [5] $end
$var wire 1 K5 rdata1 [4] $end
$var wire 1 L5 rdata1 [3] $end
$var wire 1 M5 rdata1 [2] $end
$var wire 1 N5 rdata1 [1] $end
$var wire 1 O5 rdata1 [0] $end
$var wire 1 z7 rdata2 [31] $end
$var wire 1 {7 rdata2 [30] $end
$var wire 1 |7 rdata2 [29] $end
$var wire 1 }7 rdata2 [28] $end
$var wire 1 ~7 rdata2 [27] $end
$var wire 1 !8 rdata2 [26] $end
$var wire 1 "8 rdata2 [25] $end
$var wire 1 #8 rdata2 [24] $end
$var wire 1 $8 rdata2 [23] $end
$var wire 1 %8 rdata2 [22] $end
$var wire 1 &8 rdata2 [21] $end
$var wire 1 '8 rdata2 [20] $end
$var wire 1 (8 rdata2 [19] $end
$var wire 1 )8 rdata2 [18] $end
$var wire 1 *8 rdata2 [17] $end
$var wire 1 +8 rdata2 [16] $end
$var wire 1 ,8 rdata2 [15] $end
$var wire 1 -8 rdata2 [14] $end
$var wire 1 .8 rdata2 [13] $end
$var wire 1 /8 rdata2 [12] $end
$var wire 1 08 rdata2 [11] $end
$var wire 1 18 rdata2 [10] $end
$var wire 1 28 rdata2 [9] $end
$var wire 1 38 rdata2 [8] $end
$var wire 1 48 rdata2 [7] $end
$var wire 1 58 rdata2 [6] $end
$var wire 1 68 rdata2 [5] $end
$var wire 1 78 rdata2 [4] $end
$var wire 1 88 rdata2 [3] $end
$var wire 1 98 rdata2 [2] $end
$var wire 1 :8 rdata2 [1] $end
$var wire 1 ;8 rdata2 [0] $end
$var wire 1 A6 s_extendout [31] $end
$var wire 1 B6 s_extendout [30] $end
$var wire 1 C6 s_extendout [29] $end
$var wire 1 D6 s_extendout [28] $end
$var wire 1 E6 s_extendout [27] $end
$var wire 1 F6 s_extendout [26] $end
$var wire 1 G6 s_extendout [25] $end
$var wire 1 H6 s_extendout [24] $end
$var wire 1 I6 s_extendout [23] $end
$var wire 1 J6 s_extendout [22] $end
$var wire 1 K6 s_extendout [21] $end
$var wire 1 L6 s_extendout [20] $end
$var wire 1 M6 s_extendout [19] $end
$var wire 1 N6 s_extendout [18] $end
$var wire 1 O6 s_extendout [17] $end
$var wire 1 P6 s_extendout [16] $end
$var wire 1 Q6 s_extendout [15] $end
$var wire 1 R6 s_extendout [14] $end
$var wire 1 S6 s_extendout [13] $end
$var wire 1 T6 s_extendout [12] $end
$var wire 1 U6 s_extendout [11] $end
$var wire 1 V6 s_extendout [10] $end
$var wire 1 W6 s_extendout [9] $end
$var wire 1 X6 s_extendout [8] $end
$var wire 1 Y6 s_extendout [7] $end
$var wire 1 Z6 s_extendout [6] $end
$var wire 1 [6 s_extendout [5] $end
$var wire 1 \6 s_extendout [4] $end
$var wire 1 ]6 s_extendout [3] $end
$var wire 1 ^6 s_extendout [2] $end
$var wire 1 _6 s_extendout [1] $end
$var wire 1 `6 s_extendout [0] $end
$var wire 1 .7 instrout_2016 [4] $end
$var wire 1 /7 instrout_2016 [3] $end
$var wire 1 07 instrout_2016 [2] $end
$var wire 1 17 instrout_2016 [1] $end
$var wire 1 27 instrout_2016 [0] $end
$var wire 1 )7 instrout_1511 [4] $end
$var wire 1 *7 instrout_1511 [3] $end
$var wire 1 +7 instrout_1511 [2] $end
$var wire 1 ,7 instrout_1511 [1] $end
$var wire 1 -7 instrout_1511 [0] $end
$var wire 1 +; wb_ctlout [1] $end
$var wire 1 ,; wb_ctlout [0] $end
$var wire 1 A: branch $end
$var wire 1 '; memread $end
$var wire 1 &; memwrite $end
$var wire 1 B: zero $end
$var wire 1 M; alu_result [31] $end
$var wire 1 N; alu_result [30] $end
$var wire 1 O; alu_result [29] $end
$var wire 1 P; alu_result [28] $end
$var wire 1 Q; alu_result [27] $end
$var wire 1 R; alu_result [26] $end
$var wire 1 S; alu_result [25] $end
$var wire 1 T; alu_result [24] $end
$var wire 1 U; alu_result [23] $end
$var wire 1 V; alu_result [22] $end
$var wire 1 W; alu_result [21] $end
$var wire 1 X; alu_result [20] $end
$var wire 1 Y; alu_result [19] $end
$var wire 1 Z; alu_result [18] $end
$var wire 1 [; alu_result [17] $end
$var wire 1 \; alu_result [16] $end
$var wire 1 ]; alu_result [15] $end
$var wire 1 ^; alu_result [14] $end
$var wire 1 _; alu_result [13] $end
$var wire 1 `; alu_result [12] $end
$var wire 1 a; alu_result [11] $end
$var wire 1 b; alu_result [10] $end
$var wire 1 c; alu_result [9] $end
$var wire 1 d; alu_result [8] $end
$var wire 1 e; alu_result [7] $end
$var wire 1 f; alu_result [6] $end
$var wire 1 g; alu_result [5] $end
$var wire 1 h; alu_result [4] $end
$var wire 1 i; alu_result [3] $end
$var wire 1 j; alu_result [2] $end
$var wire 1 k; alu_result [1] $end
$var wire 1 l; alu_result [0] $end
$var wire 1 d: rdata2out [31] $end
$var wire 1 e: rdata2out [30] $end
$var wire 1 f: rdata2out [29] $end
$var wire 1 g: rdata2out [28] $end
$var wire 1 h: rdata2out [27] $end
$var wire 1 i: rdata2out [26] $end
$var wire 1 j: rdata2out [25] $end
$var wire 1 k: rdata2out [24] $end
$var wire 1 l: rdata2out [23] $end
$var wire 1 m: rdata2out [22] $end
$var wire 1 n: rdata2out [21] $end
$var wire 1 o: rdata2out [20] $end
$var wire 1 p: rdata2out [19] $end
$var wire 1 q: rdata2out [18] $end
$var wire 1 r: rdata2out [17] $end
$var wire 1 s: rdata2out [16] $end
$var wire 1 t: rdata2out [15] $end
$var wire 1 u: rdata2out [14] $end
$var wire 1 v: rdata2out [13] $end
$var wire 1 w: rdata2out [12] $end
$var wire 1 x: rdata2out [11] $end
$var wire 1 y: rdata2out [10] $end
$var wire 1 z: rdata2out [9] $end
$var wire 1 {: rdata2out [8] $end
$var wire 1 |: rdata2out [7] $end
$var wire 1 }: rdata2out [6] $end
$var wire 1 ~: rdata2out [5] $end
$var wire 1 !; rdata2out [4] $end
$var wire 1 "; rdata2out [3] $end
$var wire 1 #; rdata2out [2] $end
$var wire 1 $; rdata2out [1] $end
$var wire 1 %; rdata2out [0] $end
$var wire 1 \2 add_result [31] $end
$var wire 1 ]2 add_result [30] $end
$var wire 1 ^2 add_result [29] $end
$var wire 1 _2 add_result [28] $end
$var wire 1 `2 add_result [27] $end
$var wire 1 a2 add_result [26] $end
$var wire 1 b2 add_result [25] $end
$var wire 1 c2 add_result [24] $end
$var wire 1 d2 add_result [23] $end
$var wire 1 e2 add_result [22] $end
$var wire 1 f2 add_result [21] $end
$var wire 1 g2 add_result [20] $end
$var wire 1 h2 add_result [19] $end
$var wire 1 i2 add_result [18] $end
$var wire 1 j2 add_result [17] $end
$var wire 1 k2 add_result [16] $end
$var wire 1 l2 add_result [15] $end
$var wire 1 m2 add_result [14] $end
$var wire 1 n2 add_result [13] $end
$var wire 1 o2 add_result [12] $end
$var wire 1 p2 add_result [11] $end
$var wire 1 q2 add_result [10] $end
$var wire 1 r2 add_result [9] $end
$var wire 1 s2 add_result [8] $end
$var wire 1 t2 add_result [7] $end
$var wire 1 u2 add_result [6] $end
$var wire 1 v2 add_result [5] $end
$var wire 1 w2 add_result [4] $end
$var wire 1 x2 add_result [3] $end
$var wire 1 y2 add_result [2] $end
$var wire 1 z2 add_result [1] $end
$var wire 1 {2 add_result [0] $end
$var wire 1 m; five_bit_muxout [4] $end
$var wire 1 n; five_bit_muxout [3] $end
$var wire 1 o; five_bit_muxout [2] $end
$var wire 1 p; five_bit_muxout [1] $end
$var wire 1 q; five_bit_muxout [0] $end
$var wire 1 97 adder_out [31] $end
$var wire 1 :7 adder_out [30] $end
$var wire 1 ;7 adder_out [29] $end
$var wire 1 <7 adder_out [28] $end
$var wire 1 =7 adder_out [27] $end
$var wire 1 >7 adder_out [26] $end
$var wire 1 ?7 adder_out [25] $end
$var wire 1 @7 adder_out [24] $end
$var wire 1 A7 adder_out [23] $end
$var wire 1 B7 adder_out [22] $end
$var wire 1 C7 adder_out [21] $end
$var wire 1 D7 adder_out [20] $end
$var wire 1 E7 adder_out [19] $end
$var wire 1 F7 adder_out [18] $end
$var wire 1 G7 adder_out [17] $end
$var wire 1 H7 adder_out [16] $end
$var wire 1 I7 adder_out [15] $end
$var wire 1 J7 adder_out [14] $end
$var wire 1 K7 adder_out [13] $end
$var wire 1 L7 adder_out [12] $end
$var wire 1 M7 adder_out [11] $end
$var wire 1 N7 adder_out [10] $end
$var wire 1 O7 adder_out [9] $end
$var wire 1 P7 adder_out [8] $end
$var wire 1 Q7 adder_out [7] $end
$var wire 1 R7 adder_out [6] $end
$var wire 1 S7 adder_out [5] $end
$var wire 1 T7 adder_out [4] $end
$var wire 1 U7 adder_out [3] $end
$var wire 1 V7 adder_out [2] $end
$var wire 1 W7 adder_out [1] $end
$var wire 1 X7 adder_out [0] $end
$var wire 1 !6 b [31] $end
$var wire 1 "6 b [30] $end
$var wire 1 #6 b [29] $end
$var wire 1 $6 b [28] $end
$var wire 1 %6 b [27] $end
$var wire 1 &6 b [26] $end
$var wire 1 '6 b [25] $end
$var wire 1 (6 b [24] $end
$var wire 1 )6 b [23] $end
$var wire 1 *6 b [22] $end
$var wire 1 +6 b [21] $end
$var wire 1 ,6 b [20] $end
$var wire 1 -6 b [19] $end
$var wire 1 .6 b [18] $end
$var wire 1 /6 b [17] $end
$var wire 1 06 b [16] $end
$var wire 1 16 b [15] $end
$var wire 1 26 b [14] $end
$var wire 1 36 b [13] $end
$var wire 1 46 b [12] $end
$var wire 1 56 b [11] $end
$var wire 1 66 b [10] $end
$var wire 1 76 b [9] $end
$var wire 1 86 b [8] $end
$var wire 1 96 b [7] $end
$var wire 1 :6 b [6] $end
$var wire 1 ;6 b [5] $end
$var wire 1 <6 b [4] $end
$var wire 1 =6 b [3] $end
$var wire 1 >6 b [2] $end
$var wire 1 ?6 b [1] $end
$var wire 1 @6 b [0] $end
$var wire 1 Z7 aluout [31] $end
$var wire 1 [7 aluout [30] $end
$var wire 1 \7 aluout [29] $end
$var wire 1 ]7 aluout [28] $end
$var wire 1 ^7 aluout [27] $end
$var wire 1 _7 aluout [26] $end
$var wire 1 `7 aluout [25] $end
$var wire 1 a7 aluout [24] $end
$var wire 1 b7 aluout [23] $end
$var wire 1 c7 aluout [22] $end
$var wire 1 d7 aluout [21] $end
$var wire 1 e7 aluout [20] $end
$var wire 1 f7 aluout [19] $end
$var wire 1 g7 aluout [18] $end
$var wire 1 h7 aluout [17] $end
$var wire 1 i7 aluout [16] $end
$var wire 1 j7 aluout [15] $end
$var wire 1 k7 aluout [14] $end
$var wire 1 l7 aluout [13] $end
$var wire 1 m7 aluout [12] $end
$var wire 1 n7 aluout [11] $end
$var wire 1 o7 aluout [10] $end
$var wire 1 p7 aluout [9] $end
$var wire 1 q7 aluout [8] $end
$var wire 1 r7 aluout [7] $end
$var wire 1 s7 aluout [6] $end
$var wire 1 t7 aluout [5] $end
$var wire 1 u7 aluout [4] $end
$var wire 1 v7 aluout [3] $end
$var wire 1 w7 aluout [2] $end
$var wire 1 x7 aluout [1] $end
$var wire 1 y7 aluout [0] $end
$var wire 1 <8 muxout [4] $end
$var wire 1 =8 muxout [3] $end
$var wire 1 >8 muxout [2] $end
$var wire 1 ?8 muxout [1] $end
$var wire 1 @8 muxout [0] $end
$var wire 1 p5 control [2] $end
$var wire 1 q5 control [1] $end
$var wire 1 r5 control [0] $end
$var wire 1 Y7 aluzero $end
$scope module add $end
$var wire 1 .4 add_in1 [31] $end
$var wire 1 /4 add_in1 [30] $end
$var wire 1 04 add_in1 [29] $end
$var wire 1 14 add_in1 [28] $end
$var wire 1 24 add_in1 [27] $end
$var wire 1 34 add_in1 [26] $end
$var wire 1 44 add_in1 [25] $end
$var wire 1 54 add_in1 [24] $end
$var wire 1 64 add_in1 [23] $end
$var wire 1 74 add_in1 [22] $end
$var wire 1 84 add_in1 [21] $end
$var wire 1 94 add_in1 [20] $end
$var wire 1 :4 add_in1 [19] $end
$var wire 1 ;4 add_in1 [18] $end
$var wire 1 <4 add_in1 [17] $end
$var wire 1 =4 add_in1 [16] $end
$var wire 1 >4 add_in1 [15] $end
$var wire 1 ?4 add_in1 [14] $end
$var wire 1 @4 add_in1 [13] $end
$var wire 1 A4 add_in1 [12] $end
$var wire 1 B4 add_in1 [11] $end
$var wire 1 C4 add_in1 [10] $end
$var wire 1 D4 add_in1 [9] $end
$var wire 1 E4 add_in1 [8] $end
$var wire 1 F4 add_in1 [7] $end
$var wire 1 G4 add_in1 [6] $end
$var wire 1 H4 add_in1 [5] $end
$var wire 1 I4 add_in1 [4] $end
$var wire 1 J4 add_in1 [3] $end
$var wire 1 K4 add_in1 [2] $end
$var wire 1 L4 add_in1 [1] $end
$var wire 1 M4 add_in1 [0] $end
$var wire 1 A6 add_in2 [31] $end
$var wire 1 B6 add_in2 [30] $end
$var wire 1 C6 add_in2 [29] $end
$var wire 1 D6 add_in2 [28] $end
$var wire 1 E6 add_in2 [27] $end
$var wire 1 F6 add_in2 [26] $end
$var wire 1 G6 add_in2 [25] $end
$var wire 1 H6 add_in2 [24] $end
$var wire 1 I6 add_in2 [23] $end
$var wire 1 J6 add_in2 [22] $end
$var wire 1 K6 add_in2 [21] $end
$var wire 1 L6 add_in2 [20] $end
$var wire 1 M6 add_in2 [19] $end
$var wire 1 N6 add_in2 [18] $end
$var wire 1 O6 add_in2 [17] $end
$var wire 1 P6 add_in2 [16] $end
$var wire 1 Q6 add_in2 [15] $end
$var wire 1 R6 add_in2 [14] $end
$var wire 1 S6 add_in2 [13] $end
$var wire 1 T6 add_in2 [12] $end
$var wire 1 U6 add_in2 [11] $end
$var wire 1 V6 add_in2 [10] $end
$var wire 1 W6 add_in2 [9] $end
$var wire 1 X6 add_in2 [8] $end
$var wire 1 Y6 add_in2 [7] $end
$var wire 1 Z6 add_in2 [6] $end
$var wire 1 [6 add_in2 [5] $end
$var wire 1 \6 add_in2 [4] $end
$var wire 1 ]6 add_in2 [3] $end
$var wire 1 ^6 add_in2 [2] $end
$var wire 1 _6 add_in2 [1] $end
$var wire 1 `6 add_in2 [0] $end
$var wire 1 97 add_out [31] $end
$var wire 1 :7 add_out [30] $end
$var wire 1 ;7 add_out [29] $end
$var wire 1 <7 add_out [28] $end
$var wire 1 =7 add_out [27] $end
$var wire 1 >7 add_out [26] $end
$var wire 1 ?7 add_out [25] $end
$var wire 1 @7 add_out [24] $end
$var wire 1 A7 add_out [23] $end
$var wire 1 B7 add_out [22] $end
$var wire 1 C7 add_out [21] $end
$var wire 1 D7 add_out [20] $end
$var wire 1 E7 add_out [19] $end
$var wire 1 F7 add_out [18] $end
$var wire 1 G7 add_out [17] $end
$var wire 1 H7 add_out [16] $end
$var wire 1 I7 add_out [15] $end
$var wire 1 J7 add_out [14] $end
$var wire 1 K7 add_out [13] $end
$var wire 1 L7 add_out [12] $end
$var wire 1 M7 add_out [11] $end
$var wire 1 N7 add_out [10] $end
$var wire 1 O7 add_out [9] $end
$var wire 1 P7 add_out [8] $end
$var wire 1 Q7 add_out [7] $end
$var wire 1 R7 add_out [6] $end
$var wire 1 S7 add_out [5] $end
$var wire 1 T7 add_out [4] $end
$var wire 1 U7 add_out [3] $end
$var wire 1 V7 add_out [2] $end
$var wire 1 W7 add_out [1] $end
$var wire 1 X7 add_out [0] $end
$upscope $end
$scope module alu $end
$var wire 1 05 a [31] $end
$var wire 1 15 a [30] $end
$var wire 1 25 a [29] $end
$var wire 1 35 a [28] $end
$var wire 1 45 a [27] $end
$var wire 1 55 a [26] $end
$var wire 1 65 a [25] $end
$var wire 1 75 a [24] $end
$var wire 1 85 a [23] $end
$var wire 1 95 a [22] $end
$var wire 1 :5 a [21] $end
$var wire 1 ;5 a [20] $end
$var wire 1 <5 a [19] $end
$var wire 1 =5 a [18] $end
$var wire 1 >5 a [17] $end
$var wire 1 ?5 a [16] $end
$var wire 1 @5 a [15] $end
$var wire 1 A5 a [14] $end
$var wire 1 B5 a [13] $end
$var wire 1 C5 a [12] $end
$var wire 1 D5 a [11] $end
$var wire 1 E5 a [10] $end
$var wire 1 F5 a [9] $end
$var wire 1 G5 a [8] $end
$var wire 1 H5 a [7] $end
$var wire 1 I5 a [6] $end
$var wire 1 J5 a [5] $end
$var wire 1 K5 a [4] $end
$var wire 1 L5 a [3] $end
$var wire 1 M5 a [2] $end
$var wire 1 N5 a [1] $end
$var wire 1 O5 a [0] $end
$var wire 1 !6 b [31] $end
$var wire 1 "6 b [30] $end
$var wire 1 #6 b [29] $end
$var wire 1 $6 b [28] $end
$var wire 1 %6 b [27] $end
$var wire 1 &6 b [26] $end
$var wire 1 '6 b [25] $end
$var wire 1 (6 b [24] $end
$var wire 1 )6 b [23] $end
$var wire 1 *6 b [22] $end
$var wire 1 +6 b [21] $end
$var wire 1 ,6 b [20] $end
$var wire 1 -6 b [19] $end
$var wire 1 .6 b [18] $end
$var wire 1 /6 b [17] $end
$var wire 1 06 b [16] $end
$var wire 1 16 b [15] $end
$var wire 1 26 b [14] $end
$var wire 1 36 b [13] $end
$var wire 1 46 b [12] $end
$var wire 1 56 b [11] $end
$var wire 1 66 b [10] $end
$var wire 1 76 b [9] $end
$var wire 1 86 b [8] $end
$var wire 1 96 b [7] $end
$var wire 1 :6 b [6] $end
$var wire 1 ;6 b [5] $end
$var wire 1 <6 b [4] $end
$var wire 1 =6 b [3] $end
$var wire 1 >6 b [2] $end
$var wire 1 ?6 b [1] $end
$var wire 1 @6 b [0] $end
$var wire 1 p5 control [2] $end
$var wire 1 q5 control [1] $end
$var wire 1 r5 control [0] $end
$var wire 1 Y7 zero $end
$var wire 1 t5 sign_mismatch $end
$var reg 32 u5 result [31:0] $end
$upscope $end
$scope module alu_control $end
$var wire 1 [6 funct [5] $end
$var wire 1 \6 funct [4] $end
$var wire 1 ]6 funct [3] $end
$var wire 1 ^6 funct [2] $end
$var wire 1 _6 funct [1] $end
$var wire 1 `6 funct [0] $end
$var wire 1 |5 aluop [1] $end
$var wire 1 }5 aluop [0] $end
$var reg 3 ~5 select [2:0] $end
$upscope $end
$scope module mux2 $end
$var wire 1 !6 y [31] $end
$var wire 1 "6 y [30] $end
$var wire 1 #6 y [29] $end
$var wire 1 $6 y [28] $end
$var wire 1 %6 y [27] $end
$var wire 1 &6 y [26] $end
$var wire 1 '6 y [25] $end
$var wire 1 (6 y [24] $end
$var wire 1 )6 y [23] $end
$var wire 1 *6 y [22] $end
$var wire 1 +6 y [21] $end
$var wire 1 ,6 y [20] $end
$var wire 1 -6 y [19] $end
$var wire 1 .6 y [18] $end
$var wire 1 /6 y [17] $end
$var wire 1 06 y [16] $end
$var wire 1 16 y [15] $end
$var wire 1 26 y [14] $end
$var wire 1 36 y [13] $end
$var wire 1 46 y [12] $end
$var wire 1 56 y [11] $end
$var wire 1 66 y [10] $end
$var wire 1 76 y [9] $end
$var wire 1 86 y [8] $end
$var wire 1 96 y [7] $end
$var wire 1 :6 y [6] $end
$var wire 1 ;6 y [5] $end
$var wire 1 <6 y [4] $end
$var wire 1 =6 y [3] $end
$var wire 1 >6 y [2] $end
$var wire 1 ?6 y [1] $end
$var wire 1 @6 y [0] $end
$var wire 1 A6 a [31] $end
$var wire 1 B6 a [30] $end
$var wire 1 C6 a [29] $end
$var wire 1 D6 a [28] $end
$var wire 1 E6 a [27] $end
$var wire 1 F6 a [26] $end
$var wire 1 G6 a [25] $end
$var wire 1 H6 a [24] $end
$var wire 1 I6 a [23] $end
$var wire 1 J6 a [22] $end
$var wire 1 K6 a [21] $end
$var wire 1 L6 a [20] $end
$var wire 1 M6 a [19] $end
$var wire 1 N6 a [18] $end
$var wire 1 O6 a [17] $end
$var wire 1 P6 a [16] $end
$var wire 1 Q6 a [15] $end
$var wire 1 R6 a [14] $end
$var wire 1 S6 a [13] $end
$var wire 1 T6 a [12] $end
$var wire 1 U6 a [11] $end
$var wire 1 V6 a [10] $end
$var wire 1 W6 a [9] $end
$var wire 1 X6 a [8] $end
$var wire 1 Y6 a [7] $end
$var wire 1 Z6 a [6] $end
$var wire 1 [6 a [5] $end
$var wire 1 \6 a [4] $end
$var wire 1 ]6 a [3] $end
$var wire 1 ^6 a [2] $end
$var wire 1 _6 a [1] $end
$var wire 1 `6 a [0] $end
$var wire 1 z7 b [31] $end
$var wire 1 {7 b [30] $end
$var wire 1 |7 b [29] $end
$var wire 1 }7 b [28] $end
$var wire 1 ~7 b [27] $end
$var wire 1 !8 b [26] $end
$var wire 1 "8 b [25] $end
$var wire 1 #8 b [24] $end
$var wire 1 $8 b [23] $end
$var wire 1 %8 b [22] $end
$var wire 1 &8 b [21] $end
$var wire 1 '8 b [20] $end
$var wire 1 (8 b [19] $end
$var wire 1 )8 b [18] $end
$var wire 1 *8 b [17] $end
$var wire 1 +8 b [16] $end
$var wire 1 ,8 b [15] $end
$var wire 1 -8 b [14] $end
$var wire 1 .8 b [13] $end
$var wire 1 /8 b [12] $end
$var wire 1 08 b [11] $end
$var wire 1 18 b [10] $end
$var wire 1 28 b [9] $end
$var wire 1 38 b [8] $end
$var wire 1 48 b [7] $end
$var wire 1 58 b [6] $end
$var wire 1 68 b [5] $end
$var wire 1 78 b [4] $end
$var wire 1 88 b [3] $end
$var wire 1 98 b [2] $end
$var wire 1 :8 b [1] $end
$var wire 1 ;8 b [0] $end
$var wire 1 #7 sel $end
$upscope $end
$scope module bottom_mux2 $end
$var wire 1 <8 y [4] $end
$var wire 1 =8 y [3] $end
$var wire 1 >8 y [2] $end
$var wire 1 ?8 y [1] $end
$var wire 1 @8 y [0] $end
$var wire 1 )7 a [4] $end
$var wire 1 *7 a [3] $end
$var wire 1 +7 a [2] $end
$var wire 1 ,7 a [1] $end
$var wire 1 -7 a [0] $end
$var wire 1 .7 b [4] $end
$var wire 1 /7 b [3] $end
$var wire 1 07 b [2] $end
$var wire 1 17 b [1] $end
$var wire 1 27 b [0] $end
$var wire 1 37 sel $end
$upscope $end
$scope module ex_mem $end
$var wire 1 47 ctlwb_out [1] $end
$var wire 1 57 ctlwb_out [0] $end
$var wire 1 67 ctlm_out [2] $end
$var wire 1 77 ctlm_out [1] $end
$var wire 1 87 ctlm_out [0] $end
$var wire 1 97 adder_out [31] $end
$var wire 1 :7 adder_out [30] $end
$var wire 1 ;7 adder_out [29] $end
$var wire 1 <7 adder_out [28] $end
$var wire 1 =7 adder_out [27] $end
$var wire 1 >7 adder_out [26] $end
$var wire 1 ?7 adder_out [25] $end
$var wire 1 @7 adder_out [24] $end
$var wire 1 A7 adder_out [23] $end
$var wire 1 B7 adder_out [22] $end
$var wire 1 C7 adder_out [21] $end
$var wire 1 D7 adder_out [20] $end
$var wire 1 E7 adder_out [19] $end
$var wire 1 F7 adder_out [18] $end
$var wire 1 G7 adder_out [17] $end
$var wire 1 H7 adder_out [16] $end
$var wire 1 I7 adder_out [15] $end
$var wire 1 J7 adder_out [14] $end
$var wire 1 K7 adder_out [13] $end
$var wire 1 L7 adder_out [12] $end
$var wire 1 M7 adder_out [11] $end
$var wire 1 N7 adder_out [10] $end
$var wire 1 O7 adder_out [9] $end
$var wire 1 P7 adder_out [8] $end
$var wire 1 Q7 adder_out [7] $end
$var wire 1 R7 adder_out [6] $end
$var wire 1 S7 adder_out [5] $end
$var wire 1 T7 adder_out [4] $end
$var wire 1 U7 adder_out [3] $end
$var wire 1 V7 adder_out [2] $end
$var wire 1 W7 adder_out [1] $end
$var wire 1 X7 adder_out [0] $end
$var wire 1 Y7 aluzero $end
$var wire 1 Z7 aluout [31] $end
$var wire 1 [7 aluout [30] $end
$var wire 1 \7 aluout [29] $end
$var wire 1 ]7 aluout [28] $end
$var wire 1 ^7 aluout [27] $end
$var wire 1 _7 aluout [26] $end
$var wire 1 `7 aluout [25] $end
$var wire 1 a7 aluout [24] $end
$var wire 1 b7 aluout [23] $end
$var wire 1 c7 aluout [22] $end
$var wire 1 d7 aluout [21] $end
$var wire 1 e7 aluout [20] $end
$var wire 1 f7 aluout [19] $end
$var wire 1 g7 aluout [18] $end
$var wire 1 h7 aluout [17] $end
$var wire 1 i7 aluout [16] $end
$var wire 1 j7 aluout [15] $end
$var wire 1 k7 aluout [14] $end
$var wire 1 l7 aluout [13] $end
$var wire 1 m7 aluout [12] $end
$var wire 1 n7 aluout [11] $end
$var wire 1 o7 aluout [10] $end
$var wire 1 p7 aluout [9] $end
$var wire 1 q7 aluout [8] $end
$var wire 1 r7 aluout [7] $end
$var wire 1 s7 aluout [6] $end
$var wire 1 t7 aluout [5] $end
$var wire 1 u7 aluout [4] $end
$var wire 1 v7 aluout [3] $end
$var wire 1 w7 aluout [2] $end
$var wire 1 x7 aluout [1] $end
$var wire 1 y7 aluout [0] $end
$var wire 1 z7 readdat2 [31] $end
$var wire 1 {7 readdat2 [30] $end
$var wire 1 |7 readdat2 [29] $end
$var wire 1 }7 readdat2 [28] $end
$var wire 1 ~7 readdat2 [27] $end
$var wire 1 !8 readdat2 [26] $end
$var wire 1 "8 readdat2 [25] $end
$var wire 1 #8 readdat2 [24] $end
$var wire 1 $8 readdat2 [23] $end
$var wire 1 %8 readdat2 [22] $end
$var wire 1 &8 readdat2 [21] $end
$var wire 1 '8 readdat2 [20] $end
$var wire 1 (8 readdat2 [19] $end
$var wire 1 )8 readdat2 [18] $end
$var wire 1 *8 readdat2 [17] $end
$var wire 1 +8 readdat2 [16] $end
$var wire 1 ,8 readdat2 [15] $end
$var wire 1 -8 readdat2 [14] $end
$var wire 1 .8 readdat2 [13] $end
$var wire 1 /8 readdat2 [12] $end
$var wire 1 08 readdat2 [11] $end
$var wire 1 18 readdat2 [10] $end
$var wire 1 28 readdat2 [9] $end
$var wire 1 38 readdat2 [8] $end
$var wire 1 48 readdat2 [7] $end
$var wire 1 58 readdat2 [6] $end
$var wire 1 68 readdat2 [5] $end
$var wire 1 78 readdat2 [4] $end
$var wire 1 88 readdat2 [3] $end
$var wire 1 98 readdat2 [2] $end
$var wire 1 :8 readdat2 [1] $end
$var wire 1 ;8 readdat2 [0] $end
$var wire 1 <8 muxout [4] $end
$var wire 1 =8 muxout [3] $end
$var wire 1 >8 muxout [2] $end
$var wire 1 ?8 muxout [1] $end
$var wire 1 @8 muxout [0] $end
$var reg 2 A8 wb_ctlout [1:0] $end
$var reg 1 B8 branch $end
$var reg 1 C8 memread $end
$var reg 1 D8 memwrite $end
$var reg 32 E8 add_result [31:0] $end
$var reg 1 F8 zero $end
$var reg 32 G8 alu_result [31:0] $end
$var reg 32 H8 rdata2out [31:0] $end
$var reg 5 I8 five_bit_muxout [4:0] $end
$upscope $end
$upscope $end
$scope module MEMORY1 $end
$var wire 1 +; wb_ctlout [1] $end
$var wire 1 ,; wb_ctlout [0] $end
$var wire 1 A: branch $end
$var wire 1 '; memread $end
$var wire 1 &; memwrite $end
$var wire 1 B: zero $end
$var wire 1 M; alu_result [31] $end
$var wire 1 N; alu_result [30] $end
$var wire 1 O; alu_result [29] $end
$var wire 1 P; alu_result [28] $end
$var wire 1 Q; alu_result [27] $end
$var wire 1 R; alu_result [26] $end
$var wire 1 S; alu_result [25] $end
$var wire 1 T; alu_result [24] $end
$var wire 1 U; alu_result [23] $end
$var wire 1 V; alu_result [22] $end
$var wire 1 W; alu_result [21] $end
$var wire 1 X; alu_result [20] $end
$var wire 1 Y; alu_result [19] $end
$var wire 1 Z; alu_result [18] $end
$var wire 1 [; alu_result [17] $end
$var wire 1 \; alu_result [16] $end
$var wire 1 ]; alu_result [15] $end
$var wire 1 ^; alu_result [14] $end
$var wire 1 _; alu_result [13] $end
$var wire 1 `; alu_result [12] $end
$var wire 1 a; alu_result [11] $end
$var wire 1 b; alu_result [10] $end
$var wire 1 c; alu_result [9] $end
$var wire 1 d; alu_result [8] $end
$var wire 1 e; alu_result [7] $end
$var wire 1 f; alu_result [6] $end
$var wire 1 g; alu_result [5] $end
$var wire 1 h; alu_result [4] $end
$var wire 1 i; alu_result [3] $end
$var wire 1 j; alu_result [2] $end
$var wire 1 k; alu_result [1] $end
$var wire 1 l; alu_result [0] $end
$var wire 1 d: rdata2out [31] $end
$var wire 1 e: rdata2out [30] $end
$var wire 1 f: rdata2out [29] $end
$var wire 1 g: rdata2out [28] $end
$var wire 1 h: rdata2out [27] $end
$var wire 1 i: rdata2out [26] $end
$var wire 1 j: rdata2out [25] $end
$var wire 1 k: rdata2out [24] $end
$var wire 1 l: rdata2out [23] $end
$var wire 1 m: rdata2out [22] $end
$var wire 1 n: rdata2out [21] $end
$var wire 1 o: rdata2out [20] $end
$var wire 1 p: rdata2out [19] $end
$var wire 1 q: rdata2out [18] $end
$var wire 1 r: rdata2out [17] $end
$var wire 1 s: rdata2out [16] $end
$var wire 1 t: rdata2out [15] $end
$var wire 1 u: rdata2out [14] $end
$var wire 1 v: rdata2out [13] $end
$var wire 1 w: rdata2out [12] $end
$var wire 1 x: rdata2out [11] $end
$var wire 1 y: rdata2out [10] $end
$var wire 1 z: rdata2out [9] $end
$var wire 1 {: rdata2out [8] $end
$var wire 1 |: rdata2out [7] $end
$var wire 1 }: rdata2out [6] $end
$var wire 1 ~: rdata2out [5] $end
$var wire 1 !; rdata2out [4] $end
$var wire 1 "; rdata2out [3] $end
$var wire 1 #; rdata2out [2] $end
$var wire 1 $; rdata2out [1] $end
$var wire 1 %; rdata2out [0] $end
$var wire 1 m; five_bit_muxout [4] $end
$var wire 1 n; five_bit_muxout [3] $end
$var wire 1 o; five_bit_muxout [2] $end
$var wire 1 p; five_bit_muxout [1] $end
$var wire 1 q; five_bit_muxout [0] $end
$var wire 1 C: MEM_PCSrc $end
$var wire 1 89 MEM_WB_regwrite $end
$var wire 1 |= MEM_WB_memtoreg $end
$var wire 1 <= read_data [31] $end
$var wire 1 == read_data [30] $end
$var wire 1 >= read_data [29] $end
$var wire 1 ?= read_data [28] $end
$var wire 1 @= read_data [27] $end
$var wire 1 A= read_data [26] $end
$var wire 1 B= read_data [25] $end
$var wire 1 C= read_data [24] $end
$var wire 1 D= read_data [23] $end
$var wire 1 E= read_data [22] $end
$var wire 1 F= read_data [21] $end
$var wire 1 G= read_data [20] $end
$var wire 1 H= read_data [19] $end
$var wire 1 I= read_data [18] $end
$var wire 1 J= read_data [17] $end
$var wire 1 K= read_data [16] $end
$var wire 1 L= read_data [15] $end
$var wire 1 M= read_data [14] $end
$var wire 1 N= read_data [13] $end
$var wire 1 O= read_data [12] $end
$var wire 1 P= read_data [11] $end
$var wire 1 Q= read_data [10] $end
$var wire 1 R= read_data [9] $end
$var wire 1 S= read_data [8] $end
$var wire 1 T= read_data [7] $end
$var wire 1 U= read_data [6] $end
$var wire 1 V= read_data [5] $end
$var wire 1 W= read_data [4] $end
$var wire 1 X= read_data [3] $end
$var wire 1 Y= read_data [2] $end
$var wire 1 Z= read_data [1] $end
$var wire 1 [= read_data [0] $end
$var wire 1 \= mem_alu_result [31] $end
$var wire 1 ]= mem_alu_result [30] $end
$var wire 1 ^= mem_alu_result [29] $end
$var wire 1 _= mem_alu_result [28] $end
$var wire 1 `= mem_alu_result [27] $end
$var wire 1 a= mem_alu_result [26] $end
$var wire 1 b= mem_alu_result [25] $end
$var wire 1 c= mem_alu_result [24] $end
$var wire 1 d= mem_alu_result [23] $end
$var wire 1 e= mem_alu_result [22] $end
$var wire 1 f= mem_alu_result [21] $end
$var wire 1 g= mem_alu_result [20] $end
$var wire 1 h= mem_alu_result [19] $end
$var wire 1 i= mem_alu_result [18] $end
$var wire 1 j= mem_alu_result [17] $end
$var wire 1 k= mem_alu_result [16] $end
$var wire 1 l= mem_alu_result [15] $end
$var wire 1 m= mem_alu_result [14] $end
$var wire 1 n= mem_alu_result [13] $end
$var wire 1 o= mem_alu_result [12] $end
$var wire 1 p= mem_alu_result [11] $end
$var wire 1 q= mem_alu_result [10] $end
$var wire 1 r= mem_alu_result [9] $end
$var wire 1 s= mem_alu_result [8] $end
$var wire 1 t= mem_alu_result [7] $end
$var wire 1 u= mem_alu_result [6] $end
$var wire 1 v= mem_alu_result [5] $end
$var wire 1 w= mem_alu_result [4] $end
$var wire 1 x= mem_alu_result [3] $end
$var wire 1 y= mem_alu_result [2] $end
$var wire 1 z= mem_alu_result [1] $end
$var wire 1 {= mem_alu_result [0] $end
$var wire 1 z9 mem_write_reg [4] $end
$var wire 1 {9 mem_write_reg [3] $end
$var wire 1 |9 mem_write_reg [2] $end
$var wire 1 }9 mem_write_reg [1] $end
$var wire 1 ~9 mem_write_reg [0] $end
$var wire 1 -; read_data_in [31] $end
$var wire 1 .; read_data_in [30] $end
$var wire 1 /; read_data_in [29] $end
$var wire 1 0; read_data_in [28] $end
$var wire 1 1; read_data_in [27] $end
$var wire 1 2; read_data_in [26] $end
$var wire 1 3; read_data_in [25] $end
$var wire 1 4; read_data_in [24] $end
$var wire 1 5; read_data_in [23] $end
$var wire 1 6; read_data_in [22] $end
$var wire 1 7; read_data_in [21] $end
$var wire 1 8; read_data_in [20] $end
$var wire 1 9; read_data_in [19] $end
$var wire 1 :; read_data_in [18] $end
$var wire 1 ;; read_data_in [17] $end
$var wire 1 <; read_data_in [16] $end
$var wire 1 =; read_data_in [15] $end
$var wire 1 >; read_data_in [14] $end
$var wire 1 ?; read_data_in [13] $end
$var wire 1 @; read_data_in [12] $end
$var wire 1 A; read_data_in [11] $end
$var wire 1 B; read_data_in [10] $end
$var wire 1 C; read_data_in [9] $end
$var wire 1 D; read_data_in [8] $end
$var wire 1 E; read_data_in [7] $end
$var wire 1 F; read_data_in [6] $end
$var wire 1 G; read_data_in [5] $end
$var wire 1 H; read_data_in [4] $end
$var wire 1 I; read_data_in [3] $end
$var wire 1 J; read_data_in [2] $end
$var wire 1 K; read_data_in [1] $end
$var wire 1 L; read_data_in [0] $end
$scope module AND_4 $end
$var wire 1 A: membranch $end
$var wire 1 B: zero $end
$var wire 1 C: PCSrc $end
$upscope $end
$scope module data_memory4 $end
$var wire 1 M; addr [31] $end
$var wire 1 N; addr [30] $end
$var wire 1 O; addr [29] $end
$var wire 1 P; addr [28] $end
$var wire 1 Q; addr [27] $end
$var wire 1 R; addr [26] $end
$var wire 1 S; addr [25] $end
$var wire 1 T; addr [24] $end
$var wire 1 U; addr [23] $end
$var wire 1 V; addr [22] $end
$var wire 1 W; addr [21] $end
$var wire 1 X; addr [20] $end
$var wire 1 Y; addr [19] $end
$var wire 1 Z; addr [18] $end
$var wire 1 [; addr [17] $end
$var wire 1 \; addr [16] $end
$var wire 1 ]; addr [15] $end
$var wire 1 ^; addr [14] $end
$var wire 1 _; addr [13] $end
$var wire 1 `; addr [12] $end
$var wire 1 a; addr [11] $end
$var wire 1 b; addr [10] $end
$var wire 1 c; addr [9] $end
$var wire 1 d; addr [8] $end
$var wire 1 e; addr [7] $end
$var wire 1 f; addr [6] $end
$var wire 1 g; addr [5] $end
$var wire 1 h; addr [4] $end
$var wire 1 i; addr [3] $end
$var wire 1 j; addr [2] $end
$var wire 1 k; addr [1] $end
$var wire 1 l; addr [0] $end
$var wire 1 d: write_data [31] $end
$var wire 1 e: write_data [30] $end
$var wire 1 f: write_data [29] $end
$var wire 1 g: write_data [28] $end
$var wire 1 h: write_data [27] $end
$var wire 1 i: write_data [26] $end
$var wire 1 j: write_data [25] $end
$var wire 1 k: write_data [24] $end
$var wire 1 l: write_data [23] $end
$var wire 1 m: write_data [22] $end
$var wire 1 n: write_data [21] $end
$var wire 1 o: write_data [20] $end
$var wire 1 p: write_data [19] $end
$var wire 1 q: write_data [18] $end
$var wire 1 r: write_data [17] $end
$var wire 1 s: write_data [16] $end
$var wire 1 t: write_data [15] $end
$var wire 1 u: write_data [14] $end
$var wire 1 v: write_data [13] $end
$var wire 1 w: write_data [12] $end
$var wire 1 x: write_data [11] $end
$var wire 1 y: write_data [10] $end
$var wire 1 z: write_data [9] $end
$var wire 1 {: write_data [8] $end
$var wire 1 |: write_data [7] $end
$var wire 1 }: write_data [6] $end
$var wire 1 ~: write_data [5] $end
$var wire 1 !; write_data [4] $end
$var wire 1 "; write_data [3] $end
$var wire 1 #; write_data [2] $end
$var wire 1 $; write_data [1] $end
$var wire 1 %; write_data [0] $end
$var wire 1 &; memwrite $end
$var wire 1 '; memread $end
$var reg 32 (; read_data [31:0] $end
$var reg 8192 ); DMEM [31:0] $end
$var integer 32 *; i $end
$upscope $end
$scope module mem_wb4 $end
$var wire 1 +; control_wb_in [1] $end
$var wire 1 ,; control_wb_in [0] $end
$var wire 1 -; read_data_in [31] $end
$var wire 1 .; read_data_in [30] $end
$var wire 1 /; read_data_in [29] $end
$var wire 1 0; read_data_in [28] $end
$var wire 1 1; read_data_in [27] $end
$var wire 1 2; read_data_in [26] $end
$var wire 1 3; read_data_in [25] $end
$var wire 1 4; read_data_in [24] $end
$var wire 1 5; read_data_in [23] $end
$var wire 1 6; read_data_in [22] $end
$var wire 1 7; read_data_in [21] $end
$var wire 1 8; read_data_in [20] $end
$var wire 1 9; read_data_in [19] $end
$var wire 1 :; read_data_in [18] $end
$var wire 1 ;; read_data_in [17] $end
$var wire 1 <; read_data_in [16] $end
$var wire 1 =; read_data_in [15] $end
$var wire 1 >; read_data_in [14] $end
$var wire 1 ?; read_data_in [13] $end
$var wire 1 @; read_data_in [12] $end
$var wire 1 A; read_data_in [11] $end
$var wire 1 B; read_data_in [10] $end
$var wire 1 C; read_data_in [9] $end
$var wire 1 D; read_data_in [8] $end
$var wire 1 E; read_data_in [7] $end
$var wire 1 F; read_data_in [6] $end
$var wire 1 G; read_data_in [5] $end
$var wire 1 H; read_data_in [4] $end
$var wire 1 I; read_data_in [3] $end
$var wire 1 J; read_data_in [2] $end
$var wire 1 K; read_data_in [1] $end
$var wire 1 L; read_data_in [0] $end
$var wire 1 M; alu_result_in [31] $end
$var wire 1 N; alu_result_in [30] $end
$var wire 1 O; alu_result_in [29] $end
$var wire 1 P; alu_result_in [28] $end
$var wire 1 Q; alu_result_in [27] $end
$var wire 1 R; alu_result_in [26] $end
$var wire 1 S; alu_result_in [25] $end
$var wire 1 T; alu_result_in [24] $end
$var wire 1 U; alu_result_in [23] $end
$var wire 1 V; alu_result_in [22] $end
$var wire 1 W; alu_result_in [21] $end
$var wire 1 X; alu_result_in [20] $end
$var wire 1 Y; alu_result_in [19] $end
$var wire 1 Z; alu_result_in [18] $end
$var wire 1 [; alu_result_in [17] $end
$var wire 1 \; alu_result_in [16] $end
$var wire 1 ]; alu_result_in [15] $end
$var wire 1 ^; alu_result_in [14] $end
$var wire 1 _; alu_result_in [13] $end
$var wire 1 `; alu_result_in [12] $end
$var wire 1 a; alu_result_in [11] $end
$var wire 1 b; alu_result_in [10] $end
$var wire 1 c; alu_result_in [9] $end
$var wire 1 d; alu_result_in [8] $end
$var wire 1 e; alu_result_in [7] $end
$var wire 1 f; alu_result_in [6] $end
$var wire 1 g; alu_result_in [5] $end
$var wire 1 h; alu_result_in [4] $end
$var wire 1 i; alu_result_in [3] $end
$var wire 1 j; alu_result_in [2] $end
$var wire 1 k; alu_result_in [1] $end
$var wire 1 l; alu_result_in [0] $end
$var wire 1 m; write_reg_in [4] $end
$var wire 1 n; write_reg_in [3] $end
$var wire 1 o; write_reg_in [2] $end
$var wire 1 p; write_reg_in [1] $end
$var wire 1 q; write_reg_in [0] $end
$var reg 1 r; regwrite $end
$var reg 1 s; memtoreg $end
$var reg 32 t; read_data [31:0] $end
$var reg 32 u; mem_alu_result [31:0] $end
$var reg 5 v; mem_write_reg [4:0] $end
$upscope $end
$upscope $end
$scope module writeback1 $end
$var wire 1 |= MEM_WB_memtoreg $end
$var wire 1 <= read_data [31] $end
$var wire 1 == read_data [30] $end
$var wire 1 >= read_data [29] $end
$var wire 1 ?= read_data [28] $end
$var wire 1 @= read_data [27] $end
$var wire 1 A= read_data [26] $end
$var wire 1 B= read_data [25] $end
$var wire 1 C= read_data [24] $end
$var wire 1 D= read_data [23] $end
$var wire 1 E= read_data [22] $end
$var wire 1 F= read_data [21] $end
$var wire 1 G= read_data [20] $end
$var wire 1 H= read_data [19] $end
$var wire 1 I= read_data [18] $end
$var wire 1 J= read_data [17] $end
$var wire 1 K= read_data [16] $end
$var wire 1 L= read_data [15] $end
$var wire 1 M= read_data [14] $end
$var wire 1 N= read_data [13] $end
$var wire 1 O= read_data [12] $end
$var wire 1 P= read_data [11] $end
$var wire 1 Q= read_data [10] $end
$var wire 1 R= read_data [9] $end
$var wire 1 S= read_data [8] $end
$var wire 1 T= read_data [7] $end
$var wire 1 U= read_data [6] $end
$var wire 1 V= read_data [5] $end
$var wire 1 W= read_data [4] $end
$var wire 1 X= read_data [3] $end
$var wire 1 Y= read_data [2] $end
$var wire 1 Z= read_data [1] $end
$var wire 1 [= read_data [0] $end
$var wire 1 \= mem_alu_result [31] $end
$var wire 1 ]= mem_alu_result [30] $end
$var wire 1 ^= mem_alu_result [29] $end
$var wire 1 _= mem_alu_result [28] $end
$var wire 1 `= mem_alu_result [27] $end
$var wire 1 a= mem_alu_result [26] $end
$var wire 1 b= mem_alu_result [25] $end
$var wire 1 c= mem_alu_result [24] $end
$var wire 1 d= mem_alu_result [23] $end
$var wire 1 e= mem_alu_result [22] $end
$var wire 1 f= mem_alu_result [21] $end
$var wire 1 g= mem_alu_result [20] $end
$var wire 1 h= mem_alu_result [19] $end
$var wire 1 i= mem_alu_result [18] $end
$var wire 1 j= mem_alu_result [17] $end
$var wire 1 k= mem_alu_result [16] $end
$var wire 1 l= mem_alu_result [15] $end
$var wire 1 m= mem_alu_result [14] $end
$var wire 1 n= mem_alu_result [13] $end
$var wire 1 o= mem_alu_result [12] $end
$var wire 1 p= mem_alu_result [11] $end
$var wire 1 q= mem_alu_result [10] $end
$var wire 1 r= mem_alu_result [9] $end
$var wire 1 s= mem_alu_result [8] $end
$var wire 1 t= mem_alu_result [7] $end
$var wire 1 u= mem_alu_result [6] $end
$var wire 1 v= mem_alu_result [5] $end
$var wire 1 w= mem_alu_result [4] $end
$var wire 1 x= mem_alu_result [3] $end
$var wire 1 y= mem_alu_result [2] $end
$var wire 1 z= mem_alu_result [1] $end
$var wire 1 {= mem_alu_result [0] $end
$var wire 1 z< WB_mux_writedata [31] $end
$var wire 1 {< WB_mux_writedata [30] $end
$var wire 1 |< WB_mux_writedata [29] $end
$var wire 1 }< WB_mux_writedata [28] $end
$var wire 1 ~< WB_mux_writedata [27] $end
$var wire 1 != WB_mux_writedata [26] $end
$var wire 1 "= WB_mux_writedata [25] $end
$var wire 1 #= WB_mux_writedata [24] $end
$var wire 1 $= WB_mux_writedata [23] $end
$var wire 1 %= WB_mux_writedata [22] $end
$var wire 1 &= WB_mux_writedata [21] $end
$var wire 1 '= WB_mux_writedata [20] $end
$var wire 1 (= WB_mux_writedata [19] $end
$var wire 1 )= WB_mux_writedata [18] $end
$var wire 1 *= WB_mux_writedata [17] $end
$var wire 1 += WB_mux_writedata [16] $end
$var wire 1 ,= WB_mux_writedata [15] $end
$var wire 1 -= WB_mux_writedata [14] $end
$var wire 1 .= WB_mux_writedata [13] $end
$var wire 1 /= WB_mux_writedata [12] $end
$var wire 1 0= WB_mux_writedata [11] $end
$var wire 1 1= WB_mux_writedata [10] $end
$var wire 1 2= WB_mux_writedata [9] $end
$var wire 1 3= WB_mux_writedata [8] $end
$var wire 1 4= WB_mux_writedata [7] $end
$var wire 1 5= WB_mux_writedata [6] $end
$var wire 1 6= WB_mux_writedata [5] $end
$var wire 1 7= WB_mux_writedata [4] $end
$var wire 1 8= WB_mux_writedata [3] $end
$var wire 1 9= WB_mux_writedata [2] $end
$var wire 1 := WB_mux_writedata [1] $end
$var wire 1 ;= WB_mux_writedata [0] $end
$scope module mux3 $end
$var wire 1 z< y [31] $end
$var wire 1 {< y [30] $end
$var wire 1 |< y [29] $end
$var wire 1 }< y [28] $end
$var wire 1 ~< y [27] $end
$var wire 1 != y [26] $end
$var wire 1 "= y [25] $end
$var wire 1 #= y [24] $end
$var wire 1 $= y [23] $end
$var wire 1 %= y [22] $end
$var wire 1 &= y [21] $end
$var wire 1 '= y [20] $end
$var wire 1 (= y [19] $end
$var wire 1 )= y [18] $end
$var wire 1 *= y [17] $end
$var wire 1 += y [16] $end
$var wire 1 ,= y [15] $end
$var wire 1 -= y [14] $end
$var wire 1 .= y [13] $end
$var wire 1 /= y [12] $end
$var wire 1 0= y [11] $end
$var wire 1 1= y [10] $end
$var wire 1 2= y [9] $end
$var wire 1 3= y [8] $end
$var wire 1 4= y [7] $end
$var wire 1 5= y [6] $end
$var wire 1 6= y [5] $end
$var wire 1 7= y [4] $end
$var wire 1 8= y [3] $end
$var wire 1 9= y [2] $end
$var wire 1 := y [1] $end
$var wire 1 ;= y [0] $end
$var wire 1 <= a [31] $end
$var wire 1 == a [30] $end
$var wire 1 >= a [29] $end
$var wire 1 ?= a [28] $end
$var wire 1 @= a [27] $end
$var wire 1 A= a [26] $end
$var wire 1 B= a [25] $end
$var wire 1 C= a [24] $end
$var wire 1 D= a [23] $end
$var wire 1 E= a [22] $end
$var wire 1 F= a [21] $end
$var wire 1 G= a [20] $end
$var wire 1 H= a [19] $end
$var wire 1 I= a [18] $end
$var wire 1 J= a [17] $end
$var wire 1 K= a [16] $end
$var wire 1 L= a [15] $end
$var wire 1 M= a [14] $end
$var wire 1 N= a [13] $end
$var wire 1 O= a [12] $end
$var wire 1 P= a [11] $end
$var wire 1 Q= a [10] $end
$var wire 1 R= a [9] $end
$var wire 1 S= a [8] $end
$var wire 1 T= a [7] $end
$var wire 1 U= a [6] $end
$var wire 1 V= a [5] $end
$var wire 1 W= a [4] $end
$var wire 1 X= a [3] $end
$var wire 1 Y= a [2] $end
$var wire 1 Z= a [1] $end
$var wire 1 [= a [0] $end
$var wire 1 \= b [31] $end
$var wire 1 ]= b [30] $end
$var wire 1 ^= b [29] $end
$var wire 1 _= b [28] $end
$var wire 1 `= b [27] $end
$var wire 1 a= b [26] $end
$var wire 1 b= b [25] $end
$var wire 1 c= b [24] $end
$var wire 1 d= b [23] $end
$var wire 1 e= b [22] $end
$var wire 1 f= b [21] $end
$var wire 1 g= b [20] $end
$var wire 1 h= b [19] $end
$var wire 1 i= b [18] $end
$var wire 1 j= b [17] $end
$var wire 1 k= b [16] $end
$var wire 1 l= b [15] $end
$var wire 1 m= b [14] $end
$var wire 1 n= b [13] $end
$var wire 1 o= b [12] $end
$var wire 1 p= b [11] $end
$var wire 1 q= b [10] $end
$var wire 1 r= b [9] $end
$var wire 1 s= b [8] $end
$var wire 1 t= b [7] $end
$var wire 1 u= b [6] $end
$var wire 1 v= b [5] $end
$var wire 1 w= b [4] $end
$var wire 1 x= b [3] $end
$var wire 1 y= b [2] $end
$var wire 1 z= b [1] $end
$var wire 1 {= b [0] $end
$var wire 1 |= sel $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0K'
0J'
0I'
0H'
0G'
0U'
0R'
0Q'
0P'
0W'
0S'
0<'
0;'
0:'
09'
08'
0x'
0O'
0N'
0M'
0L'
0V'
0F'
0E'
0D'
0C'
0B'
0T'
0O$
b0 P$
0Z.
0Y.
0X.
0W.
0V.
0U.
0T.
0S.
0R.
0Q.
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0z-
0y-
0x-
0w-
0v-
0r-
0q-
0p-
0o-
0n-
0m-
0'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0~9
0}9
0|9
0{9
0z9
089
0;=
0:=
09=
08=
07=
06=
05=
04=
03=
02=
01=
00=
0/=
0.=
0-=
0,=
0+=
0*=
0)=
0(=
0'=
0&=
0%=
0$=
0#=
0"=
0!=
0~<
0}<
0|<
0{<
0z<
057
047
087
077
067
037
0#7
0}5
0|5
0M4
0L4
0K4
0J4
0I4
0H4
0G4
0F4
0E4
0D4
0C4
0B4
0A4
0@4
0?4
0>4
0=4
0<4
0;4
0:4
094
084
074
064
054
044
034
024
014
004
0/4
0.4
0O5
0N5
0M5
0L5
0K5
0J5
0I5
0H5
0G5
0F5
0E5
0D5
0C5
0B5
0A5
0@5
0?5
0>5
0=5
0<5
0;5
0:5
095
085
075
065
055
045
035
025
015
005
0;8
0:8
098
088
078
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
0)8
0(8
0'8
0&8
0%8
0$8
0#8
0"8
0!8
0~7
0}7
0|7
0{7
0z7
0`6
0_6
0^6
0]6
0\6
0[6
0Z6
0Y6
0X6
0W6
0V6
0U6
0T6
0S6
0R6
0Q6
0P6
0O6
0N6
0M6
0L6
0K6
0J6
0I6
0H6
0G6
0F6
0E6
0D6
0C6
0B6
0A6
027
017
007
0/7
0.7
0-7
0,7
0+7
0*7
0)7
0,;
0+;
0A:
0';
0&;
0B:
0l;
0k;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0^;
0];
0\;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0N;
0M;
1:(
0%;
0$;
0#;
0";
0!;
0~:
0}:
0|:
0{:
0z:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0l:
0k:
0j:
0i:
0h:
0g:
0f:
0e:
0d:
0{2
0z2
0y2
0x2
0w2
0v2
0u2
0t2
0s2
0r2
0q2
0p2
0o2
0n2
0m2
0l2
0k2
0j2
0i2
0h2
0g2
0f2
0e2
0d2
0c2
0b2
0a2
0`2
0_2
0^2
0]2
0\2
0q;
0p;
0o;
0n;
0m;
0A'
0@'
0?'
0>'
0='
0[.
0|=
0[=
0Z=
0Y=
0X=
0W=
0V=
0U=
0T=
0S=
0R=
0Q=
0P=
0O=
0N=
0M=
0L=
0K=
0J=
0I=
0H=
0G=
0F=
0E=
0D=
0C=
0B=
0A=
0@=
0?=
0>=
0==
0<=
0{=
0z=
0y=
0x=
0w=
0v=
0u=
0t=
0s=
0r=
0q=
0p=
0o=
0n=
0m=
0l=
0k=
0j=
0i=
0h=
0g=
0f=
0e=
0d=
0c=
0b=
0a=
0`=
0_=
0^=
0]=
0\=
0C:
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
1~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
1n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
1d(
1c(
0b(
0a(
0`(
1_(
1$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
b0 ;(
b10001100000000010000000000000001 \(
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ](
bx ^(
b0 A)
b0 B)
0e.
0d.
1c.
1b.
0a.
0`.
0_.
0^.
1].
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
06/
05/
04/
03/
02/
01/
00/
0//
0./
0-/
0,/
0+/
0*/
0)/
0(/
0g/
0f/
0e/
0d/
0c/
0b/
0a/
0`/
0_/
0^/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
0M/
0L/
0K/
0J/
0I/
0H/
0)0
0(0
0'0
0&0
0%0
0$0
0#0
0"0
0!0
0~/
0}/
0|/
0{/
0z/
0y/
0x/
0w/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
0h/
b1100 s-
b0 t-
b10 u-
b0 H.
b0 I.
b0 J.
b1001 K.
b0 \.
b0 40
b0 50
060
070
b0 80
b0 90
b0 :0
b0 ;0
b0 <0
b0 =0
b0 >0
0X7
0W7
0V7
0U7
0T7
0S7
0R7
0Q7
0P7
0O7
0N7
0M7
0L7
0K7
0J7
0I7
0H7
0G7
0F7
0E7
0D7
0C7
0B7
0A7
0@7
0?7
0>7
0=7
0<7
0;7
0:7
097
0@6
0?6
0>6
0=6
0<6
0;6
0:6
096
086
076
066
056
046
036
026
016
006
0/6
0.6
0-6
0,6
0+6
0*6
0)6
0(6
0'6
0&6
0%6
0$6
0#6
0"6
0!6
0y7
0x7
0w7
0v7
0u7
0t7
0s7
0r7
0q7
0p7
0o7
0n7
0m7
0l7
0k7
0j7
0i7
0h7
0g7
0f7
0e7
0d7
0c7
0b7
0a7
0`7
0_7
0^7
0]7
0\7
0[7
0Z7
0@8
0?8
0>8
0=8
0<8
0r5
1q5
0p5
1Y7
b0 u5
0t5
b10 ~5
b0 A8
0B8
0C8
0D8
b0 E8
0F8
b0 G8
b0 H8
b0 I8
0L;
0K;
0J;
0I;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
0>;
0=;
0<;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
0.;
0-;
b0 (;

b1010 *;
0r;
0s;
b0 t;
b0 u;
b0 v;
$end
#1000
1.0
1r-
1q-
1m-
1'/
147
137
1|5
1B:
0:(
1[.
1b)
0~(
1}(
0n(
1m(
0$*
1#*
19(
b1 ;(
b10001100000000100000000000000010 \(
b10001100000000010000000000000001 A)
b1 B)
1e.
0c.
0b.
1`.
1^.
1)0
b1 s-
b10 t-
b11 u-
b1 \.
b10 40
160
b10 80
xy7
xx7
xw7
xv7
xu7
xt7
xs7
xr7
xq7
xp7
xo7
xn7
xm7
xl7
xk7
xj7
xi7
xh7
xg7
xf7
xe7
xd7
xc7
xb7
xa7
x`7
x_7
x^7
x]7
x\7
x[7
xZ7
1r5
xY7
bx u5
b11 ~5
1F8
#2000
1Z.
0.0
1-0
0'/
1&/
157
177
037
1#7
0|5
1M4
1`6
127
1+;
xB:
xl;
xk;
xj;
xi;
xh;
xg;
xf;
xe;
xd;
xc;
xb;
xa;
x`;
x_;
x^;
x];
x\;
x[;
xZ;
xY;
xX;
xW;
xV;
xU;
xT;
xS;
xR;
xQ;
xP;
xO;
xN;
xM;
1:(
0[.
0b)
1a)
1~(
1n(
1$*
b10 ;(
b10001100000000110000000000000011 \(
b10001100000000100000000000000010 A)
b10 B)
0)0
1(0
b10 \.
b11 40
b10 50
060
170
b0 80
b1 90
b1 <0
b1 =0
1W7
1@6
1y7
0x7
0w7
0v7
0u7
0t7
0s7
0r7
0q7
0p7
0o7
0n7
0m7
0l7
0k7
0j7
0i7
0h7
0g7
0f7
0e7
0d7
0c7
0b7
0a7
0`7
0_7
0^7
0]7
0\7
0[7
0Z7
1@8
0r5
0Y7
b1 u5
b10 ~5
b10 A8
xF8
bx G8
#3000
1.0
1'/
189
x;=
x:=
x9=
x8=
x7=
x6=
x5=
x4=
x3=
x2=
x1=
x0=
x/=
x.=
x-=
x,=
x+=
x*=
x)=
x(=
x'=
x&=
x%=
x$=
x#=
x"=
x!=
x~<
x}<
x|<
x{<
xz<
0M4
1L4
0`6
1_6
027
117
1,;
1';
0B:
1l;
0k;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0^;
0];
0\;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0N;
0M;
0:(
1z2
1q;
1[.
x{=
xz=
xy=
xx=
xw=
xv=
xu=
xt=
xs=
xr=
xq=
xp=
xo=
xn=
xm=
xl=
xk=
xj=
xi=
xh=
xg=
xf=
xe=
xd=
xc=
xb=
xa=
x`=
x_=
x^=
x]=
x\=
1b)
0~(
0}(
0n(
0m(
0d(
0c(
0$*
0#*
1"*
09(
18(
b11 ;(
b10000000000000000000000000000000 \(
b10001100000000110000000000000011 A)
b11 B)
1)0
b11 \.
b10 90
b10 <0
b10 =0
0W7
1V7
0@6
1?6
0y7
1x7
0@8
1?8
b10 u5
b11 A8
1C8
b10 E8
0F8
b1 G8
b1 I8
1L;
b1 (;
1r;
bx u;
#4000
0Z.
0.0
0-0
0r-
0q-
0'/
0&/
1%/
1~9
1;=
0:=
09=
08=
07=
06=
05=
04=
03=
02=
01=
00=
0/=
0.=
0-=
0,=
0+=
0*=
0)=
0(=
0'=
0&=
0%=
0$=
0#=
0"=
0!=
0~<
0}<
0|<
0{<
0z<
1M4
1`6
127
0l;
1k;
1:(
0z2
1y2
0q;
1p;
0[.
1|=
1[=
1{=
0z=
0y=
0x=
0w=
0v=
0u=
0t=
0s=
0r=
0q=
0p=
0o=
0n=
0m=
0l=
0k=
0j=
0i=
0h=
0g=
0f=
0e=
0d=
0c=
0b=
0a=
0`=
0_=
0^=
0]=
0\=
0b)
0a)
1`)
1$*
b100 ;(
b10000000000000000000000000000000 A)
b100 B)
0e.
0`.
0^.
0].
0)0
0(0
b0 s-
b0 t-
b0 u-
b
b0 \.
b11 90
b11 <0
b11 =0
1W7
1@6
1y7
1@8
b11 u5
b100 E8
b10 G8
b10 I8
0L;
1K;
b10 (;
1s;
b1 t;
b1 u;
b1 v;
#5000
1'/
0~9
1}9
0;=
1:=
057
047
077
0#7
0M4
0L4
1K4
0`6
0_6
027
017
1l;
0:(
1z2
1q;
0[=
1Z=
0{=
1z=
1b)
1y(
1s(
1m(
1i(
0_(
0$*
1#*
19(
b101 ;(
b1000100000100000100000 \(
b101 B)
b
b0 40
b0 50
070
b100 90
b0 <0
b0 =0
0W7
0@6
0?6
0y7
0x7
0@8
0?8
1Y7
b0 u5
b110 E8
b11 G8
b11 I8
1L;
b11 (;
b10 t;
b10 u;
b10 v;
#6000
1V.
130
1-0
1z-
0m-
0'/
1&/
1~9
1;=
1M4
0,;
0+;
0';
1B:
0l;
0k;
1:(
0z2
0q;
0p;
1[=
1{=
0b)
1a)
0y(
0s(
0m(
0i(
1_(
1$*
b110 ;(
b10000000000000000000000000000000 \(
b1000100000100000100000 A)
b110 B)
1c.
1b.
1].
1G/
1f/
1$0
1|/
b1100 s-
b10 u-
b1 H.
b10 I.
b
b100000100000 \.
b101 90
1X7
b0 A8
0C8
b100 E8
1F8
b0 G8
b0 I8
b11 t;
b11 u;
b11 v;
#7000
0V.
030
0-0
0z-
1m-
1'/
0~9
0}9
089
0;=
0:=
147
137
1|5
0M4
1L4
1O5
1:8
1[6
1U6
117
1-7
0:(
1{2
0|=
0{=
0z=
1b)
0$*
0#*
0"*
1!*
09(
08(
17(
b111 ;(
b10000000000000000000000000000000 A)
b111 B)
0c.
0b.
0].
0G/
0f/
0$0
0|/
b0 s-
b0 u-
b0 H.
b0 I.
b0 \.
b10 40
160
b10 80
b110 90
b1 :0
b10 ;0
b100000100000 <0
b10 =0
b1 >0
0X7
1W7
1S7
1M7
1?6
1y7
1x7
1@8
0Y7
b11 u5
b101 E8
0r;
0s;
b0 u;
b0 v;
#8000
0'/
0&/
0%/
1$/
047
037
0|5
1M4
0O5
0:8
0[6
0U6
017
0-7
1+;
0B:
1l;
1k;
1:(
1$;
0{2
1z2
1v2
1p2
1q;
0b)
0a)
0`)
1_)
1$*
b1000 ;(
b1000 B)
b0 40
060
b0 80
b111 90
b0 :0
b0 ;0
b0 <0
b0 =0
b0 >0
1X7
0S7
0M7
0?6
0y7
0x7
0@8
1Y7
b0 u5
b10 A8
b100000100110 E8
0F8
b11 G8
b10 H8
b1 I8
#9000
1'/
1~9
189
1;=
1:=
0M4
0L4
0K4
1J4
0+;
1B:
0l;
0k;
0:(
0$;
1{2
0v2
0p2
0q;
1{=
1z=
1b)
1y(
1s(
1n(
1m(
1i(
0_(
0$*
1#*
19(
b1001 ;(
b1000110000100000100000 \(
b1001 B)
b
b1000 90
0X7
0W7
0V7
1U7
b0 A8
b111 E8
1F8
b0 G8
b0 H8
b0 I8
1r;
b11 u;
b1 v;
#10000
1V.
130
1.0
1-0
1z-
0m-
0'/
1&/
0~9
089
0;=
0:=
1M4
1:(
0{2
0z2
0y2
1x2
0{=
0z=
0b)
1a)
0y(
0s(
0n(
0m(
0i(
1_(
1$*
b1010 ;(
b10000000000000000000000000000000 \(
b1000110000100000100000 A)
b1010 B)
1c.
1b.
1].
1G/
1F/
1g/
1f/
1$0
1|/
b1100 s-
b10 u-
b11 H.
b11 I.
b100000100000 \.
b1001 90
1X7
b1000 E8
0r;
b0 u;
b0 v;
#11000
0V.
030
0.0
0-0
0z-
1m-
1'/
147
137
1|5
0M4
1L4
1O5
1N5
1;8
1:8
1[6
1U6
127
117
1-7
0:(
1{2
1b)
0$*
0#*
1"*
09(
18(
b1011 ;(
b10000000000000000000000000000000 A)
b1011 B)
0c.
0b.
0].
0G/
0F/
0g/
0f/
0$0
0|/
b0 s-
b0 u-
b0 H.
b0 I.
b0 \.
b10 40
160
b10 80
b1010 90
b11 :0
b11 ;0
b100000100000 <0
b11 =0
b1 >0
0X7
1W7
1S7
1M7
1@6
1?6
0y7
1x7
1w7
1@8
0Y7
b110 u5
b1001 E8
#12000
0'/
0&/
1%/
047
037
0|5
1M4
0O5
0N5
0;8
0:8
0[6
0U6
027
017
0-7
1+;
0B:
1k;
1j;
1:(
1%;
1$;
0{2
1z2
1v2
1p2
1q;
0b)
0a)
1`)
1$*
b1100 ;(
b1100 B)
b0 40
060
b0 80
b1011 90
b0 :0
b0 ;0
b0 <0
b0 =0
b0 >0
1X7
0S7
0M7
0@6
0?6
0y7
0x7
0w7
0@8
1Y7
b0 u5
b10 A8
b100000101010 E8
0F8
b110 G8
b11 H8
b1 I8
#13000
1'/
1~9
189
1:=
19=
0M4
0L4
1K4
0+;
1B:
0k;
0j;
0:(
0%;
0$;
1{2
0v2
0p2
0q;
1z=
1y=
1b)
1y(
1s(
1n(
1i(
0_(
0$*
1#*
19(
b1101 ;(
b1000010000100000100000 \(
b1101 B)
b
b1100 90
0X7
0W7
1V7
b0 A8
b1011 E8
1F8
b0 G8
b0 H8
b0 I8
1r;
b110 u;
b1 v;
#14000
1V.
130
1.0
1z-
0m-
0'/
1&/
0~9
089
0:=
09=
1M4
1:(
0{2
0z2
1y2
0z=
0y=
0b)
1a)
0y(
0s(
0n(
0i(
1_(
1$*
b1110 ;(
b10000000000000000000000000000000 \(
b1000010000100000100000 A)
b1110 B)
1c.
1b.
1].
1F/
1E/
1f/
1e/
1$0
1|/
b1100 s-
b10 u-
b110 H.
b110 I.
b100000100000 \.
b1101 90
1X7
b1100 E8
0r;
b0 u;
b0 v;
#15000
0V.
030
0.0
0z-
1m-
1'/
147
137
1|5
0M4
1L4
1N5
1M5
1:8
198
1[6
1U6
127
1-7
0:(
1{2
1b)
0$*
0#*
0"*
0!*
1~)
09(
08(
07(
16(
b1111 ;(
b10000000000000000000000000000000 A)
b1111 B)
0c.
0b.
0].
0F/
0E/
0f/
0e/
0$0
0|/
b0 s-
b0 u-
b0 H.
b0 I.
b0 \.
b10 40
160
b10 80
b1110 90
b110 :0
b110 ;0
b100000100000 <0
b1 =0
b1 >0
0X7
1W7
1S7
1M7
1?6
1>6
0x7
1w7
1v7
1@8
0Y7
b1100 u5
b1101 E8
#16000
0'/
0&/
0%/
0$/
1#/
047
037
0|5
1M4
0N5
0M5
0:8
098
0[6
0U6
027
0-7
1+;
0B:
1j;
1i;
1:(
1$;
1#;
0{2
1z2
1v2
1p2
1q;
0b)
0a)
0`)
0_)
1^)
1$*
b10000 ;(
b10000 B)
b0 40
060
b0 80
b1111 90
b0 :0
b0 ;0
b0 <0
b0 =0
b0 >0
1X7
0S7
0M7
0?6
0>6
0x7
0w7
0v7
0@8
1Y7
b0 u5
b10 A8
b100000101110 E8
0F8
b1100 G8
b110 H8
b1 I8
#17000
1'/
1~9
189
19=
18=
0M4
0L4
0K4
0J4
1I4
0+;
1B:
0j;
0i;
0:(
0$;
0#;
1{2
0v2
0p2
0q;
1y=
1x=
1b)
0$*
1#*
19(
b10001 ;(
b10001 B)
b
b10000 90
0X7
0W7
0V7
0U7
1T7
b0 A8
b1111 E8
1F8
b0 G